//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Farm TD (Testing Build)
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibCOMI"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libCOMI_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_realStartingMinerals = 1300;
const int gv_realStartingGas = 200;
const int gv_realStartingLives = 20;
const int gv_realStartingPriceBonus = 0;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
fixed[14] gv_realEXPIncrease;
fixed[13][13] gv_realLevelingStats;
fixed[13] gv_realEXP;
fixed[13] gv_realEXPBackup;
int[9] gv_intDifficultyPercent;
bool gv_boolWaveSpawning;
bool gv_boolWaveSending;
bool[13] gv_boolRespawns;
bool gv_boolWaveEndingInProgress;
bool[13][27] gv_boolMissionsCompleted;
int[14] gv_ldbLeaderboards;
int[13] gv_intPoint;
int[22] gv_intTest;
int gv_intWaveCountdown;
int gv_intTotalCreeps;
int gv_intPlayersOnline;
int[13] gv_intLives;
int gv_intWave;
int[13][4] gv_intTodaysCropPrices;
int[13] gv_intMaxCropPrices;
int[13] gv_intMerges;
int[13] gv_intTowerSold;
int[13] gv_intItemsBought;
int[13] gv_intPlantsSoldToday;
int[13][4] gv_intCrops;
string[81] gv_strWaveIcon;
string[27] gv_strMissionDescription;
unitgroup[13] gv_unitgroupCreeps;
unitgroup[13] gv_unitgroupSentCreeps;
int[13][2] gv_intPlantMastery;
int[13][2] gv_intRespawnHPStored;
text[9] gv_txtDifficultyDescription;
int[13] gv_intDifficulty;
int gv_dlgDiscord;
int gv_dlgitmDiscordButton;
int gv_dlgSell;
int[4] gv_dlgitmSellButtons;
int[13] gv_dlgDifficultySelection;
int gv_dlgSellBoard;
int[13] gv_dlgRewardSelection;
int[3][13] gv_dlgitmButtons;
int[13][2][21] gv_dlgitmPlayerButtons;
bool[13][7] gv_auratowers;
unit[13] gv_builder;
int[13] gv_damageincrease;
fixed gv_globalTexttagFlyYspeed;
unit[13] gv_acidraid;
fixed[9][71][3] gv_difficultylife;
fixed gv_globalTexttagtimer;

void InitGlobals () {
    int init_i;
    int init_j;
    int init_k;

    for (init_i = 0; init_i <= 13; init_i += 1) {
        gv_ldbLeaderboards[init_i] = c_boardNone;
    }
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_intPoint[init_i] = 1;
    }
    gv_intWaveCountdown = 40;
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_intLives[init_i] = 20;
    }
    for (init_i = 0; init_i <= 80; init_i += 1) {
        gv_strWaveIcon[init_i] = "";
    }
    for (init_i = 0; init_i <= 26; init_i += 1) {
        gv_strMissionDescription[init_i] = "";
    }
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_unitgroupCreeps[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_unitgroupSentCreeps[init_i] = UnitGroupEmpty();
    }
    gv_dlgDiscord = c_invalidDialogId;
    gv_dlgitmDiscordButton = c_invalidDialogControlId;
    gv_dlgSell = c_invalidDialogId;
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_dlgitmSellButtons[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_dlgDifficultySelection[init_i] = c_invalidDialogId;
    }
    gv_dlgSellBoard = c_invalidDialogId;
    for (init_i = 0; init_i <= 12; init_i += 1) {
        gv_dlgRewardSelection[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        for (init_j = 0; init_j <= 12; init_j += 1) {
            gv_dlgitmButtons[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 12; init_i += 1) {
        for (init_j = 0; init_j <= 1; init_j += 1) {
            for (init_k = 0; init_k <= 20; init_k += 1) {
                gv_dlgitmPlayerButtons[init_i][init_j][init_k] = c_invalidDialogControlId;
            }
        }
    }
    gv_globalTexttagFlyYspeed = 0.34;
    gv_globalTexttagtimer = 2.0;
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_TriggerAddEventUnitRangePoint (trigger lp_trigger, point lp_point, fixed lp_real, bool lp_bool);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_onGameStart;
trigger gt_onPlayerLeave;
trigger gt_onStartupBankInit;
trigger gt_onLevelUp;
trigger gt_onPlayerLevelUp;
trigger gt_onPlayerLevelUpDisplay;
trigger gt_updateLeaderboards;
trigger gt_onSendBossWave;
trigger gt_onSendWave;
trigger gt_onCreepReachesEnd;
trigger gt_onUnitBecomesIdle;
trigger gt_onCreationMechaBroodling;
trigger gt_onSpecialBossSent;
trigger gt_onWaveEnds;
trigger gt_timerUnitStuk;
trigger gt_onBuyRandomItem;
trigger gt_onSell;
trigger gt_onMerge;
trigger gt_onBuild;
trigger gt_onGasBossReady;
trigger gt_onGasBossSent;
trigger gt_onMissionCompleted;
trigger gt_Buttons;
trigger gt_Discordbutton;
trigger gt_ItemAuras;
trigger gt_ItemAurasoff;
trigger gt_ItemEffects;
trigger gt_Every1sec;
trigger gt_Checkauras;
trigger gt_Scantipede;
trigger gt_Urubu;
trigger gt_Ursadon;
trigger gt_Tastelope;
trigger gt_MechaHydralisk;
trigger gt_Evochamper;
trigger gt_MechaUltralisk;
trigger gt_Gary;
trigger gt_HighTemplar;
trigger gt_Vorazun;
trigger gt_Warpgate;
trigger gt_VoidSeeker;
trigger gt_Ultralisk;
trigger gt_Carbotzergling;
trigger gt_Kerrigan;
trigger gt_Zagara;
trigger gt_Siegetank;
trigger gt_Nova;
trigger gt_Duskwing;
trigger gt_Tychus;
trigger gt_Agesguard;
trigger gt_empororsshadow;
trigger gt_Earthsplitter;
trigger gt_Odin;
trigger gt_Nuke;
trigger gt_Photoncannon;
trigger gt_Wrathwalker;
trigger gt_Alarak;
trigger gt_BloodHunter;
trigger gt_Mothership;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_TriggerAddEventUnitRangePoint (trigger lp_trigger, point lp_point, fixed lp_real, bool lp_bool) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventUnitRangePoint(lp_trigger, null, lp_point, lp_real, lp_bool);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onGameStart
//--------------------------------------------------------------------------------------------------
bool gt_onGameStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_checkplayersonline;
    int lv_playerIndex;
    int lv_untitledVariable005;
    int lv_pointstuff;
    int lv_pointstuff2;

    // Automatic Variable Declarations
    const int autoADE54A41_ae = 12;
    const int autoADE54A41_ai = 1;
    const int autoA84CE853_ae = 12;
    const int autoA84CE853_ai = 1;
    playergroup auto67585FF6_g;
    int auto67585FF6_var;
    const int autoB87EF737_ae = 12;
    const int autoB87EF737_ai = 1;
    playergroup auto7CCA036A_g;
    int auto7CCA036A_var;
    playergroup auto0FEE80F5_g;
    int auto0FEE80F5_var;
    playergroup auto264D94B7_g;
    int auto264D94B7_var;
    const int auto66233544_ae = 12;
    const int auto66233544_ai = 1;
    const int autoA0BD8184_n = 39;
    int autoA0BD8184_i;
    const int autoB0C138BD_ae = 12;
    const int autoB0C138BD_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_onStartupBankInit, true, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/6BEB7A76"));
    lv_pointstuff = 1;
    for ( ; ( (autoADE54A41_ai >= 0 && lv_pointstuff <= autoADE54A41_ae) || (autoADE54A41_ai < 0 && lv_pointstuff >= autoADE54A41_ae) ) ; lv_pointstuff += autoADE54A41_ai ) {
        gv_realEXPIncrease[lv_pointstuff] += (PlayerGroupCount(PlayerGroupActive()) / 1.39);
        lv_pointstuff2 = 1;
        for ( ; ( (autoA84CE853_ai >= 0 && lv_pointstuff2 <= autoA84CE853_ae) || (autoA84CE853_ai < 0 && lv_pointstuff2 >= autoA84CE853_ae) ) ; lv_pointstuff2 += autoA84CE853_ai ) {
            gf_TriggerAddEventUnitRangePoint(gt_onSpecialBossSent, PointFromName(("Player " + IntToString(lv_pointstuff) + " Point " + IntToString(lv_pointstuff2))), 1.0, true);
        }
    }
    UnitKill(UnitFromId(1323207030));
    libNtve_gf_SetUpgradeLevelForPlayer(13, "CentrificalHooks", 1);
    libCOMI_gf_CM_ChatBarSetMode(libCOMI_ge_CM_ChatBarMode_CM_ChatBarNormal, PlayerGroupAll());
    GameSetSpeedValue(c_gameSpeedNormal);
    gv_strWaveIcon[0] = "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds";
    gv_strWaveIcon[1] = "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds";
    gv_strWaveIcon[2] = "Assets\\Textures\\btn-unit-protoss-probe.dds";
    gv_strWaveIcon[3] = "Assets\\Textures\\btn-unit-terran-mule.dds";
    gv_strWaveIcon[4] = "Assets\\Textures\\btn-unit-zerg-larva.dds";
    gv_strWaveIcon[5] = "Assets\\Textures\\btn-unit-terran-firebat.dds";
    gv_strWaveIcon[6] = "Assets\\Textures\\btn-unit-zerg-changeling.dds";
    gv_strWaveIcon[7] = "Assets\\Textures\\btn-unit-zerg-locust.dds";
    gv_strWaveIcon[8] = "Assets\\Textures\\btn-unit-zerg-overlord.dds";
    gv_strWaveIcon[9] = "Assets\\Textures\\btn-unit-terran-hellionbattlemode.dds";
    gv_strWaveIcon[10] = "Assets\\Textures\\btn-unit-zerg-brakk.dds";
    gv_strWaveIcon[11] = "Assets\\Textures\\btn-unit-zerg-splitterling.dds";
    gv_strWaveIcon[12] = "Assets\\Textures\\btn-unit-terran-herc.dds";
    gv_strWaveIcon[13] = "Assets\\Textures\\btn-unit-terran-medic.dds";
    gv_strWaveIcon[14] = "Assets\\Textures\\btn-unit-protoss-preserver01.dds";
    gv_strWaveIcon[15] = "Assets\\Textures\\btn-unit-terran-medivac.dds";
    gv_strWaveIcon[16] = "Assets\\Textures\\btn-unit-zerg-infestor.dds";
    gv_strWaveIcon[17] = "Assets\\Textures\\btn-unit-terran-vulture.dds";
    gv_strWaveIcon[18] = "Assets\\Textures\\btn-unit-terran-wraith.dds";
    gv_strWaveIcon[19] = "Assets\\Textures\\btn-unit-protoss-dragoon-void.dds";
    gv_strWaveIcon[20] = "Assets\\Textures\\btn-unit-terran-vikingmercenary-assault.dds";
    gv_strWaveIcon[21] = "Assets\\Textures\\btn-unit-zerg-lurker.dds";
    gv_strWaveIcon[22] = "Assets\\Textures\\btn-unit-terran-predator.dds";
    gv_strWaveIcon[23] = "Assets\\Textures\\btn-unit-terran-spectre.dds";
    gv_strWaveIcon[24] = "Assets\\Textures\\btn-ability-terran-liberator-aamode.dds";
    gv_strWaveIcon[25] = "Assets\\Textures\\btn-unit-protoss-warpray.dds";
    gv_strWaveIcon[26] = "Assets\\Textures\\btn-unit-zerg-swarmhost.dds";
    gv_strWaveIcon[27] = "Assets\\Textures\\btn-unit-protoss-warpprism.dds";
    gv_strWaveIcon[28] = "Assets\\Textures\\btn-unit-protoss-scout.dds";
    gv_strWaveIcon[29] = "Assets\\Textures\\btn-unit-zerg-aberration.dds";
    gv_strWaveIcon[30] = "Assets\\Textures\\btn-unit-protoss-mothership.dds";
    gv_strWaveIcon[31] = "Assets\\Textures\\btn-unit-protoss-darktemplar.dds";
    gv_strWaveIcon[32] = "Assets\\Textures\\btn-unit-terran-diamondback.dds";
    gv_strWaveIcon[33] = "Assets\\Textures\\btn-unit-protoss-reaver.dds";
    gv_strWaveIcon[34] = "Assets\\Textures\\btn-unit-protoss-phoenix.dds";
    gv_strWaveIcon[35] = "Assets\\Textures\\btn-unit-protoss-oracle.dds";
    gv_strWaveIcon[36] = "Assets\\Textures\\btn-unit-terran-thor.dds";
    gv_strWaveIcon[37] = "Assets\\Textures\\btn-building-hornerhan-assaultgalleon.dds";
    gv_strWaveIcon[38] = "Assets\\Textures\\btn-unit-protoss-colossus.dds";
    gv_strWaveIcon[39] = "Assets\\Textures\\btn-unit-zerg-primalultralisk.dds";
    gv_strWaveIcon[40] = "Assets\\Textures\\btn-unit-protoss-archon-ihanrii.dds";
    gv_strWaveIcon[41] = "Assets\\Textures\\btn-unit-terran-vikingmengskfighter.dds";
    gv_strWaveIcon[42] = "Assets\\Textures\\Wireframe-terran-blimp-ads.dds";
    gv_strWaveIcon[43] = "Assets\\Textures\\btn-critter-labbot.dds";
    gv_strWaveIcon[44] = "Assets\\Textures\\btn-unit-protoss-zeratulsentry.dds";
    gv_strWaveIcon[45] = "Assets\\Textures\\Wireframe-terran-bulldozer01.dds";
    gv_strWaveIcon[46] = "Assets\\Textures\\btn-unit-zerg-baneling.dds";
    gv_strWaveIcon[47] = "Assets\\Textures\\btn-unit-Zerg-PrimalZergling.dds";
    gv_strWaveIcon[48] = "Assets\\Textures\\btn-unit-zerg-brutalisk.dds";
    gv_strWaveIcon[49] = "Assets\\Textures\\btn-critter-sporeray.dds";
    gv_strWaveIcon[50] = "Assets\\Textures\\btn-unit-protoss-oracle.dds";
    gv_strWaveIcon[51] = "Assets\\Textures\\btn-unit-collection-primal-RoachUpgrade.dds";
    gv_strWaveIcon[52] = "Assets\\Textures\\btn-unit-zerg-mutalisk-broodlord.dds";
    gv_strWaveIcon[53] = "Assets\\Textures\\Wireframe-critter-cleaningbot.dds";
    gv_strWaveIcon[54] = "Assets\\Textures\\btn-unit-collection-raven-covertops.dds";
    gv_strWaveIcon[55] = "Assets\\Textures\\Btn-unit-protoss-zeratuldisruptor.dds";
    gv_strWaveIcon[56] = "Assets\\Textures\\btn-unit-zerg-volatileinfested.dds";
    gv_strWaveIcon[57] = "Assets\\Textures\\btn-unit-zerg-queenclassic.dds";
    gv_strWaveIcon[58] = "Assets\\Textures\\btn-unit-collection-primal-Tyrannozor.dds";
    gv_strWaveIcon[59] = "Assets\\Textures\\btn-unit-protoss-champion-zealot-purifier.dds";
    gv_strWaveIcon[60] = "Assets\\Textures\\btn-building-stukov-aleksander.dds";
    gv_strWaveIcon[61] = "Assets\\Textures\\btn-unit-terran-siegetankmengsk.dds";
    gv_strWaveIcon[62] = "Assets\\Textures\\btn-unit-void-deathgripcrystal.dds";
    gv_strWaveIcon[63] = "Assets\\Textures\\btn-unit-zerg-infestedscv.dds";
    gv_strWaveIcon[64] = "Assets\\Textures\\btn-unit-protoss-zealot-aiur.dds";
    gv_strWaveIcon[65] = "Assets\\Textures\\Wireframe-Critter-CardboardBoxRunner.dds";
    gv_strWaveIcon[66] = "Assets\\Textures\\btn-unit-terran-goliathblackops.dds";
    gv_strWaveIcon[67] = "Assets\\Textures\\btn-unit-protoss-mutator-reanimator.dds";
    gv_strWaveIcon[68] = "Assets\\Textures\\Wireframe-terran-murlocmarine.dds";
    gv_strWaveIcon[69] = "Assets\\Textures\\Wireframe-General-SpaceMineralCluster.dds";
    gv_strWaveIcon[70] = "Assets\\Textures\\btn-unit-zerg-kerriganascended.dds";
    gv_strMissionDescription[1] = "Own 3 of each plant simultaneously<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[2] = "Own a total of 20 plants at once<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[3] = "Have 3 or less lives left<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[4] = "Reach max mastery level<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[5] = "Own 1 of each <c val=\"FFFFFF\">Common</c> tower<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[6] = "Own 6 of the same <c val=\"FFFFFF\">Common</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[7] = "Own 5 of the same <c val=\"86F40B\">Uncommon</c> tower<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[8] = "Own 1 of each <c val=\"09A9F7\">Rare</c> tower<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[9] = "Own 4 of the same <c val=\"09A9F7\">Rare</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[10] = "Own 1 of each <c val=\"CF05FA\">Epic</c> tower<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[11] = "Own 1 of each <c val=\"FCD703\">Protoss</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[12] = "Own 1 of each <c val=\"B9BCC8\">Critter</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[13] = "Own 1 of each <c val=\"9D09F7\">Zerg</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[14] = "Own 1 of each <c val=\"86F40B\">Mecha Swarm</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[15] = "Own 1 of each <c val=\"F20000\">Tal'darim</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[16] = "Own 1 of each <c val=\"05C2FA\">Terran</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[17] = "Own 1 of each <c val=\"F86207\">Dominion</c> tower<n/>Reward: <c val=\"86F40B\">400";
    gv_strMissionDescription[18] = "Own 3 nuke silos<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[19] = "Be the First to Merge an Ursadon<n/>Reward: <c val=\"86F40B\">100";
    gv_strMissionDescription[20] = "Merge 35 towers<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[21] = "Own both the Odin and Tychus<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[22] = "Be the First to Merge an Artifact<n/>Reward: <c val=\"86F40B\">200";
    gv_strMissionDescription[23] = "Own 15 of the same plant simultaneously<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[24] = "Buy 7 items<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[25] = "Sell 10 towers<n/>Reward: <c val=\"86F40B\">300";
    gv_strMissionDescription[26] = "Sell a total of 40 plants on the same wave<n/>Reward: <c val=\"86F40B\">300";
    gv_intDifficultyPercent[1] = 0;
    gv_intDifficultyPercent[2] = 30;
    gv_intDifficultyPercent[3] = 55;
    gv_intDifficultyPercent[4] = 90;
    gv_intDifficultyPercent[5] = 140;
    gv_intDifficultyPercent[6] = 180;
    gv_intDifficultyPercent[7] = 200;
    gv_intDifficultyPercent[8] = 200;

    auto67585FF6_g = PlayerGroupAll();
    auto67585FF6_var = -1;
    while (true) {
        auto67585FF6_var = PlayerGroupNextPlayer(auto67585FF6_g, auto67585FF6_var);
        if (auto67585FF6_var < 0) { break; }
        if ((PlayerStatus(auto67585FF6_var) == c_playerStatusActive)) {
            UnitCreate(1, "SCV", 0, auto67585FF6_var, PointFromName(("Start Location " + IntToString(auto67585FF6_var))), 270.0);
            UnitControlGroupAddUnit(auto67585FF6_var, 1, UnitLastCreated());
            gv_builder[auto67585FF6_var] = UnitLastCreated();
            UnitCreate(1, "CommandCenter", c_unitCreateIgnorePlacement, auto67585FF6_var, PointFromName(("CC" + IntToString(auto67585FF6_var))), 270.0);
            UnitControlGroupAddUnit(auto67585FF6_var, 2, UnitLastCreated());
            UnitBehaviorAdd(gv_builder[auto67585FF6_var], "PlantmasteryN", gv_builder[auto67585FF6_var], 15);
            gv_intMaxCropPrices[auto67585FF6_var] += FixedToInt(gv_realLevelingStats[auto67585FF6_var][12]);
            UnitSetPropertyFixed(gv_builder[auto67585FF6_var], c_unitPropXP, gv_realEXP[auto67585FF6_var]);
            lv_playerIndex = 1;
            for ( ; ( (autoB87EF737_ai >= 0 && lv_playerIndex <= autoB87EF737_ae) || (autoB87EF737_ai < 0 && lv_playerIndex >= autoB87EF737_ae) ) ; lv_playerIndex += autoB87EF737_ai ) {
                libNtve_gf_SetAlliance(auto67585FF6_var, lv_playerIndex, libNtve_ge_AllianceSetting_Enemy);
            }
            gv_intPlantMastery[auto67585FF6_var][1] = 15;
            CameraPan(auto67585FF6_var, PointFromName(("Start Location " + IntToString(auto67585FF6_var))), 0.0, -1, 10.0, false);
            gv_intPlayersOnline += 1;
            PlayerModifyPropertyInt(auto67585FF6_var, c_playerPropMinerals, c_playerPropOperAdd, (gv_realStartingMinerals + FixedToInt(gv_realLevelingStats[auto67585FF6_var][1])));
            PlayerModifyPropertyInt(auto67585FF6_var, c_playerPropVespene, c_playerPropOperAdd, (gv_realStartingGas + FixedToInt(gv_realLevelingStats[auto67585FF6_var][3])));
            gv_intLives[auto67585FF6_var] += FixedToInt(gv_realLevelingStats[auto67585FF6_var][4]);
            DialogCreate(600, 600, c_anchorCenter, 0, 0, true);
            gv_dlgDifficultySelection[auto67585FF6_var] = DialogLastCreated();
            DialogSetVisible(DialogLastCreated(), PlayerGroupSingle(auto67585FF6_var), true);
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 200, StringExternal("Param/Value/44CF0F9D"), StringExternal("Param/Value/6828347D"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 150, StringExternal("Param/Value/04065B0B"), StringExternal("Param/Value/E12ABA33"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][2] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 100, StringExternal("Param/Value/398454AE"), StringExternal("Param/Value/0692720E"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][3] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 50, StringExternal("Param/Value/C326D81D"), StringExternal("Param/Value/627AD9CA"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][4] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 0, StringExternal("Param/Value/91BF4352"), StringExternal("Param/Value/AF92EE72"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][5] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, -50, StringExternal("Param/Value/071F363E"), StringExternal("Param/Value/E204963C"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][6] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, -100, StringExternal("Param/Value/1A3956A9"), StringExternal("Param/Value/C2EBB34A"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][7] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgDifficultySelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, -150, StringExternal("Param/Value/D6944200"), StringExternal("Param/Value/921F0BCF"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][8] = DialogControlLastCreated();
            DialogSetTitle(gv_dlgDifficultySelection[auto67585FF6_var], StringExternal("Param/Value/37995C1D"));
            DialogCreate(600, 400, c_anchorCenter, 0, 0, true);
            gv_dlgRewardSelection[auto67585FF6_var] = DialogLastCreated();
            DialogSetVisible(DialogLastCreated(), PlayerGroupSingle(auto67585FF6_var), false);
            libNtve_gf_CreateDialogItemButton(gv_dlgRewardSelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, -100, StringExternal("Param/Value/8F0EF7ED"), StringExternal("Param/Value/B0270A66"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][12] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgRewardSelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 0, StringExternal("Param/Value/9CA897BE"), StringExternal("Param/Value/ED236640"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][11] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(gv_dlgRewardSelection[auto67585FF6_var], 450, 50, c_anchorCenter, 0, 100, StringExternal("Param/Value/24FCEE8E"), StringExternal("Param/Value/293BE70D"), "");
            gv_dlgitmPlayerButtons[auto67585FF6_var][0][10] = DialogControlLastCreated();
            DialogSetTitle(gv_dlgRewardSelection[auto67585FF6_var], StringExternal("Param/Value/CAF514BB"));
            DialogCreate(780, 710, c_anchorBottomRight, 0, -238, true);
            DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
            DialogSetImageVisible(DialogLastCreated(), false);
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 240, 50, c_anchorTopLeft, 330, 0, StringExternal("Param/Value/A71E5361"), StringExternal("Param/Value/0804608A"), "");
            gv_dlgitmSellButtons[1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 240, 50, c_anchorTopLeft, 330, 50, StringExternal("Param/Value/2D79B3C2"), StringExternal("Param/Value/656A4D5C"), "");
            gv_dlgitmSellButtons[2] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 240, 50, c_anchorTopLeft, 330, 105, StringExternal("Param/Value/76B6E8B5"), StringExternal("Param/Value/00A0F7BF"), "");
            gv_dlgitmSellButtons[3] = DialogControlLastCreated();
        }

    }
    auto7CCA036A_g = PlayerGroupAll();
    auto7CCA036A_var = -1;
    while (true) {
        auto7CCA036A_var = PlayerGroupNextPlayer(auto7CCA036A_g, auto7CCA036A_var);
        if (auto7CCA036A_var < 0) { break; }
        VisRevealArea(auto7CCA036A_var, RegionEntireMap(), 0.0, false);
    }
    BoardCreate(4, (gv_intPlayersOnline + 0), GameMapName(), Color(100.00, 100.00, 100.00));
    gv_ldbLeaderboards[0] = BoardLastCreated();
    auto0FEE80F5_g = PlayerGroupActive();
    auto0FEE80F5_var = -1;
    while (true) {
        auto0FEE80F5_var = PlayerGroupNextPlayer(auto0FEE80F5_g, auto0FEE80F5_var);
        if (auto0FEE80F5_var < 0) { break; }
        BoardItemSetText(BoardLastCreated(), 1, auto0FEE80F5_var, TextWithColor(PlayerName(auto0FEE80F5_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(auto0FEE80F5_var, false))));
        BoardItemSetText(BoardLastCreated(), 3, auto0FEE80F5_var, StringExternal("Param/Value/3CD9677C"));
        BoardItemSetText(BoardLastCreated(), 3, auto0FEE80F5_var, StringExternal("Param/Value/871DEF4D"));
    }
    BoardItemSetText(BoardLastCreated(), 1, c_boardRowHeader, StringExternal("Param/Value/0A8F193D"));
    BoardItemSetText(BoardLastCreated(), 2, c_boardRowHeader, StringExternal("Param/Value/48879ACB"));
    BoardItemSetText(BoardLastCreated(), 3, c_boardRowHeader, StringExternal("Param/Value/510863E5"));
    BoardItemSetText(BoardLastCreated(), 4, c_boardRowHeader, StringExternal("Param/Value/2CD9D853"));
    auto264D94B7_g = PlayerGroupActive();
    auto264D94B7_var = -1;
    while (true) {
        auto264D94B7_var = PlayerGroupNextPlayer(auto264D94B7_g, auto264D94B7_var);
        if (auto264D94B7_var < 0) { break; }
        BoardCreate(4, 3, StringExternal("Param/Value/E9892AA9"), Color(100.00, 100.00, 100.00));
        gv_ldbLeaderboards[auto264D94B7_var] = BoardLastCreated();
        BoardItemSetText(BoardLastCreated(), 1, c_boardRowHeader, StringExternal("Param/Value/0DF01477"));
        BoardItemSetText(BoardLastCreated(), 2, c_boardRowHeader, StringExternal("Param/Value/5B787220"));
        BoardItemSetText(BoardLastCreated(), 3, c_boardRowHeader, StringExternal("Param/Value/9BA47262"));
        BoardItemSetText(BoardLastCreated(), 4, c_boardRowHeader, StringExternal("Param/Value/26DB6537"));
        BoardItemSetText(BoardLastCreated(), 1, 1, StringExternal("Param/Value/518C2A6D"));
        BoardItemSetText(BoardLastCreated(), 1, 2, StringExternal("Param/Value/7DCEEF21"));
        BoardItemSetText(BoardLastCreated(), 1, 3, StringExternal("Param/Value/2A874F16"));
        libNtve_gf_ShowHideLeaderboard(gv_ldbLeaderboards[auto264D94B7_var], false, PlayerGroupAll());
        libNtve_gf_ShowHideLeaderboard(gv_ldbLeaderboards[auto264D94B7_var], true, PlayerGroupSingle(auto264D94B7_var));
    }
    BoardCreate(1, 2, StringExternal("Param/Value/02AE2638"), Color(100.00, 100.00, 100.00));
    gv_ldbLeaderboards[13] = BoardLastCreated();
    BoardSetAnchor(gv_ldbLeaderboards[13], c_anchorTopLeft, 0, 0);
    BoardItemSetText(gv_ldbLeaderboards[13], 1, 1, (UnitTypeGetName(UnitTypeFromString(("Creep" + IntToString((gv_intWave + 1))))) + StringExternal("Param/Value/B7A013C1") + IntToText((gv_intWave + 1)) + StringExternal("Param/Value/397EB3CC") + StringExternal("Param/Value/1B5BD85D") + StringToText(gv_strWaveIcon[(gv_intWave + 1)]) + StringExternal("Param/Value/577418E9")));
    BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, StringExternal("Param/Value/B77580E4"));
    TriggerExecute(gt_updateLeaderboards, true, false);
    lv_checkplayersonline = 1;
    for ( ; ( (auto66233544_ai >= 0 && lv_checkplayersonline <= auto66233544_ae) || (auto66233544_ai < 0 && lv_checkplayersonline >= auto66233544_ae) ) ; lv_checkplayersonline += auto66233544_ai ) {
        BoardItemSetText(gv_ldbLeaderboards[0], 2, lv_checkplayersonline, TextWithColor(IntToText(UnitLevel(gv_builder[lv_checkplayersonline])), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_checkplayersonline, false))));
        if ((PlayerStatus(lv_checkplayersonline) == c_playerStatusActive)) {
        }
        else {
            gv_intLives[lv_checkplayersonline] = 0;
        }
    }
    BoardItemSetText(gv_ldbLeaderboards[13], 1, c_boardRowHeader, (StringExternal("Param/Value/906E89B9") + IntToText(gv_intWaveCountdown) + StringExternal("Param/Value/82ABB644")));
    gv_intWaveCountdown -= 1;
    Wait(0.5, c_timeGame);
    TriggerEnable(gt_onMissionCompleted, true);
    TriggerEnable(gt_onPlayerLevelUpDisplay, true);
    Wait(0.5, c_timeGame);
    for (autoA0BD8184_i = 1; autoA0BD8184_i <= autoA0BD8184_n; autoA0BD8184_i += 1) {
        BoardItemSetText(gv_ldbLeaderboards[13], 1, c_boardRowHeader, (StringExternal("Param/Value/15D2B9A8") + IntToText(gv_intWaveCountdown) + StringExternal("Param/Value/3CAD90DE")));
        gv_intWaveCountdown -= 1;
        Wait(1.0, c_timeGame);
    }
    BoardItemSetText(gv_ldbLeaderboards[13], 1, c_boardRowHeader, StringExternal("Param/Value/457FEEA3"));
    lv_untitledVariable005 = 1;
    for ( ; ( (autoB0C138BD_ai >= 0 && lv_untitledVariable005 <= autoB0C138BD_ae) || (autoB0C138BD_ai < 0 && lv_untitledVariable005 >= autoB0C138BD_ae) ) ; lv_untitledVariable005 += autoB0C138BD_ai ) {
        if ((gv_intDifficulty[lv_untitledVariable005] == 0) && (PlayerStatus(lv_untitledVariable005) == c_playerStatusActive)) {
            gv_intDifficulty[lv_untitledVariable005] = 2;
            gv_realEXPIncrease[lv_untitledVariable005] += (2.0 / 0.72);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(lv_untitledVariable005), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_untitledVariable005, false))) + (StringExternal("Param/Value/D3EC7BD0") + (gv_txtDifficultyDescription[2] + StringExternal("Param/Value/BC13E638")))));
            BoardItemSetText(gv_ldbLeaderboards[0], 4, lv_untitledVariable005, gv_txtDifficultyDescription[gv_intDifficulty[lv_untitledVariable005]]);
            DialogSetVisible(gv_dlgDifficultySelection[lv_untitledVariable005], PlayerGroupSingle(lv_untitledVariable005), false);
            UnitBehaviorAdd(gv_builder[lv_untitledVariable005], (IntToString(gv_intDifficulty[lv_untitledVariable005])), gv_builder[lv_untitledVariable005], 1);
        }

    }
    TriggerExecute(gt_updateLeaderboards, true, false);
    TriggerExecute(gt_onSendBossWave, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onGameStart_Init () {
    gt_onGameStart = TriggerCreate("gt_onGameStart_Func");
    TriggerAddEventMapInit(gt_onGameStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onPlayerLeave
//--------------------------------------------------------------------------------------------------
bool gt_onPlayerLeave_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1465CABF_g;
    int auto1465CABF_u;
    unit auto1465CABF_var;
    unitgroup autoD0E492FC_g;
    int autoD0E492FC_u;
    unit autoD0E492FC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(gv_builder[EventPlayer()]) == true)) {
        gv_realEXPBackup[EventPlayer()] = UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent);
    }

    gv_intLives[EventPlayer()] = 0;
    SoundPlayForPlayer(SoundLink("Tychus_AC_MxFx_Event_Defeat", -1), c_maxPlayers, PlayerGroupAll(), 80.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/80798E73")));
    auto1465CABF_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(EventPlayer()))), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1465CABF_u = UnitGroupCount(auto1465CABF_g, c_unitCountAll);
    for (;; auto1465CABF_u -= 1) {
        auto1465CABF_var = UnitGroupUnitFromEnd(auto1465CABF_g, auto1465CABF_u);
        if (auto1465CABF_var == null) { break; }
        UnitSetOwner(auto1465CABF_var, 14, true);
    }
    autoD0E492FC_g = UnitGroup(null, c_playerAny, RegionFromName(("Player Region " + IntToString(EventPlayer()))), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD0E492FC_u = UnitGroupCount(autoD0E492FC_g, c_unitCountAll);
    for (;; autoD0E492FC_u -= 1) {
        autoD0E492FC_var = UnitGroupUnitFromEnd(autoD0E492FC_g, autoD0E492FC_u);
        if (autoD0E492FC_var == null) { break; }
        UnitKill(autoD0E492FC_var);
    }
    TriggerExecute(gt_updateLeaderboards, true, false);
    BankLoad("Starcraft2TimwsFarmTD", EventPlayer());
    BankValueSetFromFixed(BankLastCreated(), "Player", "XP", gv_realEXPBackup[EventPlayer()]);
    BankValueSetFromFixed(BankLastCreated(), "Player", "minz", gv_realLevelingStats[EventPlayer()][1]);
    BankValueSetFromFixed(BankLastCreated(), "Player", "gas", gv_realLevelingStats[EventPlayer()][3]);
    BankValueSetFromFixed(BankLastCreated(), "Player", "pricestart", gv_realLevelingStats[EventPlayer()][12]);
    BankValueSetFromFixed(BankLastCreated(), "Player", "life", gv_realLevelingStats[EventPlayer()][4]);
    BankOptionSet(BankLastCreated(), c_bankOptionSignature, true);
    BankSave(BankLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onPlayerLeave_Init () {
    gt_onPlayerLeave = TriggerCreate("gt_onPlayerLeave_Func");
    TriggerAddEventPlayerLeft(gt_onPlayerLeave, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onStartupBankInit
//--------------------------------------------------------------------------------------------------
bool gt_onStartupBankInit_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIndex;

    // Automatic Variable Declarations
    const int auto387372CD_ae = 12;
    const int auto387372CD_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_playerIndex = 1;
    for ( ; ( (auto387372CD_ai >= 0 && lv_playerIndex <= auto387372CD_ae) || (auto387372CD_ai < 0 && lv_playerIndex >= auto387372CD_ae) ) ; lv_playerIndex += auto387372CD_ai ) {
        BankLoad("Starcraft2TimwsFarmTD", lv_playerIndex);
        if ((BankVerify(BankLastCreated()) == true)) {
            gv_realEXP[lv_playerIndex] = BankValueGetAsFixed(BankLastCreated(), "Player", "XP");
            gv_realLevelingStats[lv_playerIndex][1] = BankValueGetAsFixed(BankLastCreated(), "Player", "minz");
            gv_realLevelingStats[lv_playerIndex][3] = BankValueGetAsFixed(BankLastCreated(), "Player", "gas");
            gv_realLevelingStats[lv_playerIndex][12] = BankValueGetAsFixed(BankLastCreated(), "Player", "pricestart");
            gv_realLevelingStats[lv_playerIndex][4] = BankValueGetAsFixed(BankLastCreated(), "Player", "life");
        }
        else {
            gv_realEXP[lv_playerIndex] = 0.0;
            gv_realLevelingStats[lv_playerIndex][1] = 0.0;
            gv_realLevelingStats[lv_playerIndex][3] = 0.0;
            gv_realLevelingStats[lv_playerIndex][12] = 0.0;
            gv_realLevelingStats[lv_playerIndex][4] = 0.0;
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onStartupBankInit_Init () {
    gt_onStartupBankInit = TriggerCreate("gt_onStartupBankInit_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onLevelUp
//--------------------------------------------------------------------------------------------------
bool gt_onLevelUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onLevelUp_Init () {
    gt_onLevelUp = TriggerCreate("gt_onLevelUp_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onPlayerLevelUp
//--------------------------------------------------------------------------------------------------
bool gt_onPlayerLevelUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitLevel(EventUnit()) >= 0) && (UnitLevel(EventUnit()) < 5)) {
        UnitBehaviorAdd(EventUnit(), "lvl0", EventUnit(), 1);
    }
    else {
        if ((UnitLevel(EventUnit()) >= 5) && (UnitLevel(EventUnit()) < 10)) {
            UnitBehaviorAdd(EventUnit(), "lvl5", EventUnit(), 1);
            UnitBehaviorRemove(EventUnit(), "lvl0", 1);
        }
        else {
            if ((UnitLevel(EventUnit()) >= 10) && (UnitLevel(EventUnit()) < 15)) {
                UnitBehaviorAdd(EventUnit(), "lvl10", EventUnit(), 1);
                UnitBehaviorRemove(EventUnit(), "lvl5", 1);
            }
            else {
                if ((UnitLevel(EventUnit()) >= 10) && (UnitLevel(EventUnit()) < 15)) {
                }
                else {
                    if ((UnitLevel(EventUnit()) >= 15) && (UnitLevel(EventUnit()) < 20)) {
                        UnitBehaviorAdd(EventUnit(), "lvl15", EventUnit(), 1);
                        UnitBehaviorRemove(EventUnit(), "lvl10", 1);
                    }
                    else {
                        if ((UnitLevel(EventUnit()) >= 20) && (UnitLevel(EventUnit()) < 25)) {
                            UnitBehaviorAdd(EventUnit(), "lvl20", EventUnit(), 1);
                            UnitBehaviorRemove(EventUnit(), "lvl15", 1);
                        }
                        else {
                            if ((UnitLevel(EventUnit()) >= 25) && (UnitLevel(EventUnit()) < 30)) {
                                UnitBehaviorAdd(EventUnit(), "lvl25", EventUnit(), 1);
                                UnitBehaviorRemove(EventUnit(), "lvl20", 1);
                            }
                            else {
                                if ((UnitLevel(EventUnit()) >= 30) && (UnitLevel(EventUnit()) < 35)) {
                                    UnitBehaviorAdd(EventUnit(), "lvl30", EventUnit(), 1);
                                    UnitBehaviorRemove(EventUnit(), "lvl25", 1);
                                }
                                else {
                                    if ((UnitLevel(EventUnit()) >= 35) && (UnitLevel(EventUnit()) < 40)) {
                                        UnitBehaviorAdd(EventUnit(), "lvl35", EventUnit(), 1);
                                        UnitBehaviorRemove(EventUnit(), "lvl30", 1);
                                    }
                                    else {
                                        if ((UnitLevel(EventUnit()) >= 40) && (UnitLevel(EventUnit()) < 45)) {
                                            UnitBehaviorAdd(EventUnit(), "lvl40", EventUnit(), 1);
                                            UnitBehaviorRemove(EventUnit(), "lvl35", 1);
                                        }
                                        else {
                                            if ((UnitLevel(EventUnit()) >= 45) && (UnitLevel(EventUnit()) < 50)) {
                                                UnitBehaviorAdd(EventUnit(), "lvl45", EventUnit(), 1);
                                                UnitBehaviorRemove(EventUnit(), "lvl40", 1);
                                            }
                                            else {
                                                if ((UnitLevel(EventUnit()) >= 50) && (UnitLevel(EventUnit()) < 55)) {
                                                    UnitBehaviorAdd(EventUnit(), "lvl50", EventUnit(), 1);
                                                    UnitBehaviorRemove(EventUnit(), "lvl45", 1);
                                                }
                                                else {
                                                    if ((UnitLevel(EventUnit()) >= 55) && (UnitLevel(EventUnit()) < 60)) {
                                                        UnitBehaviorAdd(EventUnit(), "lvl55", EventUnit(), 1);
                                                        UnitBehaviorRemove(EventUnit(), "lvl50", 1);
                                                    }
                                                    else {
                                                        if ((UnitLevel(EventUnit()) >= 60) && (UnitLevel(EventUnit()) < 65)) {
                                                            UnitBehaviorAdd(EventUnit(), "lvl60", EventUnit(), 1);
                                                            UnitBehaviorRemove(EventUnit(), "lvl55", 1);
                                                        }
                                                        else {
                                                            if ((UnitLevel(EventUnit()) >= 65) && (UnitLevel(EventUnit()) < 70)) {
                                                                UnitBehaviorAdd(EventUnit(), "lvl65", EventUnit(), 1);
                                                                UnitBehaviorRemove(EventUnit(), "lvl60", 1);
                                                            }
                                                            else {
                                                                if ((UnitLevel(EventUnit()) >= 70) && (UnitLevel(EventUnit()) < 75)) {
                                                                    UnitBehaviorAdd(EventUnit(), "lvl70", EventUnit(), 1);
                                                                    UnitBehaviorRemove(EventUnit(), "lvl65", 1);
                                                                }
                                                                else {
                                                                    if ((UnitLevel(EventUnit()) >= 75) && (UnitLevel(EventUnit()) < 80)) {
                                                                        UnitBehaviorAdd(EventUnit(), "lvl75", EventUnit(), 1);
                                                                        UnitBehaviorRemove(EventUnit(), "lvl70", 1);
                                                                    }
                                                                    else {
                                                                        if ((UnitLevel(EventUnit()) >= 80) && (UnitLevel(EventUnit()) < 85)) {
                                                                            UnitBehaviorAdd(EventUnit(), "lvl80", EventUnit(), 1);
                                                                            UnitBehaviorRemove(EventUnit(), "lvl75", 1);
                                                                        }
                                                                        else {
                                                                            if ((UnitLevel(EventUnit()) >= 85) && (UnitLevel(EventUnit()) < 90)) {
                                                                                UnitBehaviorAdd(EventUnit(), "lvl85", EventUnit(), 1);
                                                                                UnitBehaviorRemove(EventUnit(), "lvl80", 1);
                                                                            }
                                                                            else {
                                                                                if ((UnitLevel(EventUnit()) >= 90) && (UnitLevel(EventUnit()) < 95)) {
                                                                                    UnitBehaviorAdd(EventUnit(), "lvl90", EventUnit(), 1);
                                                                                    UnitBehaviorRemove(EventUnit(), "lvl85", 1);
                                                                                }
                                                                                else {
                                                                                    if ((UnitLevel(EventUnit()) >= 95) && (UnitLevel(EventUnit()) < 100)) {
                                                                                        UnitBehaviorAdd(EventUnit(), "lvl95", EventUnit(), 1);
                                                                                        UnitBehaviorRemove(EventUnit(), "lvl90", 1);
                                                                                    }
                                                                                    else {
                                                                                        if ((UnitLevel(EventUnit()) >= 95) && (UnitLevel(EventUnit()) >= 100)) {
                                                                                            UnitBehaviorAdd(EventUnit(), "lvl100", EventUnit(), 1);
                                                                                            UnitBehaviorRemove(EventUnit(), "lvl95", 1);
                                                                                        }

                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    BoardItemSetText(gv_ldbLeaderboards[0], 2, EventPlayer(), TextWithColor(IntToText(UnitLevel(EventUnit())), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))));
    if ((UnitLevel(EventUnit()) >= 5)) {
        gv_realLevelingStats[EventPlayer()][12] = 5.0;
        if ((UnitLevel(EventUnit()) >= 10)) {
            gv_realLevelingStats[EventPlayer()][1] = 150.0;
            if ((UnitLevel(EventUnit()) >= 15)) {
                gv_realLevelingStats[EventPlayer()][1] = 175.0;
                gv_realLevelingStats[EventPlayer()][2] = 2.0;
                if ((UnitLevel(EventUnit()) >= 15)) {
                    gv_realLevelingStats[EventPlayer()][1] = 225.0;
                    gv_realLevelingStats[EventPlayer()][2] = 3.0;
                    gv_realLevelingStats[EventPlayer()][12] = 10.0;
                    if ((UnitLevel(EventUnit()) >= 20)) {
                        gv_realLevelingStats[EventPlayer()][1] = 275.0;
                        gv_realLevelingStats[EventPlayer()][2] = 4.0;
                        if ((UnitLevel(EventUnit()) >= 25)) {
                            gv_realLevelingStats[EventPlayer()][4] = 5.0;
                            if ((UnitLevel(EventUnit()) >= 30)) {
                                gv_realLevelingStats[EventPlayer()][5] = 4.0;
                                gv_realLevelingStats[EventPlayer()][12] = 15.0;
                                if ((UnitLevel(EventUnit()) >= 35)) {
                                    gv_realLevelingStats[EventPlayer()][4] = 7.0;
                                    gv_realLevelingStats[EventPlayer()][2] = 5.0;
                                    gv_realLevelingStats[EventPlayer()][5] = 6.0;
                                    if ((UnitLevel(EventUnit()) >= 40)) {
                                        gv_realLevelingStats[EventPlayer()][1] = 350.0;
                                        gv_realLevelingStats[EventPlayer()][4] = 10.0;
                                        gv_realLevelingStats[EventPlayer()][3] = 200.0;
                                        if ((UnitLevel(EventUnit()) >= 45)) {
                                            gv_realLevelingStats[EventPlayer()][1] = 400.0;
                                            gv_realLevelingStats[EventPlayer()][6] = 2.0;
                                            gv_realLevelingStats[EventPlayer()][12] = 20.0;
                                            if ((UnitLevel(EventUnit()) >= 50)) {
                                                gv_realLevelingStats[EventPlayer()][6] = 3.0;
                                                gv_realLevelingStats[EventPlayer()][7] = 1.0;
                                                if ((UnitLevel(EventUnit()) >= 55)) {
                                                    gv_realLevelingStats[EventPlayer()][4] = 12.0;
                                                    gv_realLevelingStats[EventPlayer()][2] = 6.0;
                                                    gv_realLevelingStats[EventPlayer()][3] = 300.0;
                                                    gv_realLevelingStats[EventPlayer()][5] = 9.0;
                                                    gv_realLevelingStats[EventPlayer()][7] = 2.0;
                                                    gv_realLevelingStats[EventPlayer()][8] = 3.0;
                                                    gv_realLevelingStats[EventPlayer()][12] = 25.0;
                                                    if ((UnitLevel(EventUnit()) >= 60)) {
                                                        gv_realLevelingStats[EventPlayer()][4] = 13.0;
                                                        gv_realLevelingStats[EventPlayer()][1] = 470.0;
                                                        gv_realLevelingStats[EventPlayer()][5] = 10.0;
                                                        if ((UnitLevel(EventUnit()) >= 65)) {
                                                            gv_realLevelingStats[EventPlayer()][4] = 15.0;
                                                            gv_realLevelingStats[EventPlayer()][1] = 500.0;
                                                            gv_realLevelingStats[EventPlayer()][6] = 5.0;
                                                            gv_realLevelingStats[EventPlayer()][8] = 4.0;
                                                            gv_realLevelingStats[EventPlayer()][9] = 2.0;
                                                            gv_realLevelingStats[EventPlayer()][12] = 30.0;
                                                            if ((UnitLevel(EventUnit()) >= 70)) {
                                                                gv_realLevelingStats[EventPlayer()][3] = 400.0;
                                                                gv_realLevelingStats[EventPlayer()][2] = 7.0;
                                                                gv_realLevelingStats[EventPlayer()][7] = 3.0;
                                                                gv_realLevelingStats[EventPlayer()][9] = 4.0;
                                                                if ((UnitLevel(EventUnit()) >= 75)) {
                                                                    gv_realLevelingStats[EventPlayer()][4] = 17.0;
                                                                    gv_realLevelingStats[EventPlayer()][2] = 8.0;
                                                                    gv_realLevelingStats[EventPlayer()][6] = 6.0;
                                                                    gv_realLevelingStats[EventPlayer()][8] = 5.0;
                                                                    gv_realLevelingStats[EventPlayer()][7] = 5.0;
                                                                    gv_realLevelingStats[EventPlayer()][9] = 6.0;
                                                                    gv_realLevelingStats[EventPlayer()][10] = 0.1;
                                                                    if ((UnitLevel(EventUnit()) >= 80)) {
                                                                        gv_realLevelingStats[EventPlayer()][4] = 18.0;
                                                                        gv_realLevelingStats[EventPlayer()][8] = 6.0;
                                                                        gv_realLevelingStats[EventPlayer()][1] = 650.0;
                                                                        gv_realLevelingStats[EventPlayer()][5] = 11.0;
                                                                        gv_realLevelingStats[EventPlayer()][7] = 6.0;
                                                                        gv_realLevelingStats[EventPlayer()][9] = 9.0;
                                                                        gv_realLevelingStats[EventPlayer()][10] = 0.2;
                                                                        gv_realLevelingStats[EventPlayer()][12] = 35.0;
                                                                        if ((UnitLevel(EventUnit()) >= 85)) {
                                                                            gv_realLevelingStats[EventPlayer()][4] = 20.0;
                                                                            gv_realLevelingStats[EventPlayer()][5] = 12.0;
                                                                            gv_realLevelingStats[EventPlayer()][8] = 7.0;
                                                                            gv_realLevelingStats[EventPlayer()][3] = 500.0;
                                                                            gv_realLevelingStats[EventPlayer()][6] = 8.0;
                                                                            gv_realLevelingStats[EventPlayer()][7] = 7.0;
                                                                            gv_realLevelingStats[EventPlayer()][9] = 11.0;
                                                                            gv_realLevelingStats[EventPlayer()][10] = 0.3;
                                                                            if ((UnitLevel(EventUnit()) >= 90)) {
                                                                                gv_realLevelingStats[EventPlayer()][5] = 14.0;
                                                                                gv_realLevelingStats[EventPlayer()][6] = 10.0;
                                                                                gv_realLevelingStats[EventPlayer()][8] = 9.0;
                                                                                gv_realLevelingStats[EventPlayer()][7] = 8.0;
                                                                                gv_realLevelingStats[EventPlayer()][9] = 13.0;
                                                                                gv_realLevelingStats[EventPlayer()][11] = 5.0;
                                                                                if ((UnitLevel(EventUnit()) >= 95)) {
                                                                                    gv_realLevelingStats[EventPlayer()][4] = 25.0;
                                                                                    gv_realLevelingStats[EventPlayer()][8] = 11.0;
                                                                                    gv_realLevelingStats[EventPlayer()][1] = 950.0;
                                                                                    gv_realLevelingStats[EventPlayer()][2] = 10.0;
                                                                                    gv_realLevelingStats[EventPlayer()][5] = 16.0;
                                                                                    gv_realLevelingStats[EventPlayer()][9] = 20.0;
                                                                                    gv_realLevelingStats[EventPlayer()][3] = 600.0;
                                                                                    gv_realLevelingStats[EventPlayer()][6] = 15.0;
                                                                                    gv_realLevelingStats[EventPlayer()][7] = 11.0;
                                                                                    gv_realLevelingStats[EventPlayer()][10] = 0.5;
                                                                                    gv_realLevelingStats[EventPlayer()][11] = 10.0;
                                                                                    gv_realLevelingStats[EventPlayer()][12] = 40.0;
                                                                                    if ((UnitLevel(EventUnit()) >= 100)) {
                                                                                        gv_realLevelingStats[EventPlayer()][4] = 30.0;
                                                                                        gv_realLevelingStats[EventPlayer()][8] = 15.0;
                                                                                        gv_realLevelingStats[EventPlayer()][9] = 25.0;
                                                                                        gv_realLevelingStats[EventPlayer()][2] = 15.0;
                                                                                        gv_realLevelingStats[EventPlayer()][1] = 1000.0;
                                                                                        gv_realLevelingStats[EventPlayer()][5] = 22.0;
                                                                                        gv_realLevelingStats[EventPlayer()][3] = 700.0;
                                                                                        gv_realLevelingStats[EventPlayer()][7] = 15.0;
                                                                                        gv_realLevelingStats[EventPlayer()][6] = 25.0;
                                                                                        gv_realLevelingStats[EventPlayer()][10] = 0.8;
                                                                                        gv_realLevelingStats[EventPlayer()][11] = 16.0;
                                                                                        gv_realLevelingStats[EventPlayer()][12] = 50.0;
                                                                                    }

                                                                                }

                                                                            }

                                                                        }

                                                                    }

                                                                }

                                                            }

                                                        }

                                                    }

                                                }

                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }

        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onPlayerLevelUp_Init () {
    gt_onPlayerLevelUp = TriggerCreate("gt_onPlayerLevelUp_Func");
    TriggerAddEventUnitGainLevel(gt_onPlayerLevelUp, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onPlayerLevelUpDisplay
//--------------------------------------------------------------------------------------------------
bool gt_onPlayerLevelUpDisplay_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/7A0C62A3") + TextWithColor(IntToText(UnitLevel(EventUnit())), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false)))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onPlayerLevelUpDisplay_Init () {
    gt_onPlayerLevelUpDisplay = TriggerCreate("gt_onPlayerLevelUpDisplay_Func");
    TriggerEnable(gt_onPlayerLevelUpDisplay, false);
    TriggerAddEventUnitGainLevel(gt_onPlayerLevelUpDisplay, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: updateLeaderboards
//--------------------------------------------------------------------------------------------------
bool gt_updateLeaderboards_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIndex;

    // Automatic Variable Declarations
    playergroup auto7D5DE16F_g;
    int auto7D5DE16F_var;
    playergroup auto04BFD083_g;
    int auto04BFD083_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    auto7D5DE16F_g = PlayerGroupActive();
    auto7D5DE16F_var = -1;
    while (true) {
        auto7D5DE16F_var = PlayerGroupNextPlayer(auto7D5DE16F_g, auto7D5DE16F_var);
        if (auto7D5DE16F_var < 0) { break; }
        BoardItemSetText(gv_ldbLeaderboards[0], 3, auto7D5DE16F_var, TextWithColor(IntToText(gv_intLives[auto7D5DE16F_var]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(auto7D5DE16F_var, false))));
    }
    BoardSetName(gv_ldbLeaderboards[13], StringExternal("Param/Value/C0B77B68"), Color(100.00, 100.00, 100.00));
    auto04BFD083_g = PlayerGroupActive();
    auto04BFD083_var = -1;
    while (true) {
        auto04BFD083_var = PlayerGroupNextPlayer(auto04BFD083_g, auto04BFD083_var);
        if (auto04BFD083_var < 0) { break; }
        BoardSetName(gv_ldbLeaderboards[auto04BFD083_var], (StringExternal("Param/Value/0EAAEAF3") + IntToText((50 + gv_intMaxCropPrices[auto04BFD083_var])) + StringExternal("Param/Value/D8F0CA00") + IntToText((100 + gv_intMaxCropPrices[auto04BFD083_var])) + StringExternal("Param/Value/BA100A75")), Color(100.00, 100.00, 100.00));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 2, 1, IntToText(gv_intCrops[auto04BFD083_var][1]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 2, 2, IntToText(gv_intCrops[auto04BFD083_var][2]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 2, 3, IntToText(gv_intCrops[auto04BFD083_var][3]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 3, 1, IntToText(gv_intTodaysCropPrices[auto04BFD083_var][1]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 3, 2, IntToText(gv_intTodaysCropPrices[auto04BFD083_var][2]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 3, 3, IntToText(gv_intTodaysCropPrices[auto04BFD083_var][3]));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 4, 1, IntToText((gv_intTodaysCropPrices[auto04BFD083_var][1] * gv_intCrops[auto04BFD083_var][1])));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 4, 2, IntToText((gv_intTodaysCropPrices[auto04BFD083_var][2] * gv_intCrops[auto04BFD083_var][2])));
        BoardItemSetText(gv_ldbLeaderboards[auto04BFD083_var], 4, 3, IntToText((gv_intTodaysCropPrices[auto04BFD083_var][3] * gv_intCrops[auto04BFD083_var][3])));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_updateLeaderboards_Init () {
    gt_updateLeaderboards = TriggerCreate("gt_updateLeaderboards_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onSendBossWave
//--------------------------------------------------------------------------------------------------
bool gt_onSendBossWave_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_sent;
    int lv_player;
    int lv_int;
    int lv_int2;
    int lv_hp;
    bool lv_once;
    int lv_differ;
    int lv_plapper;
    int lv_test;
    int lv_bothi;
    int lv_untitledVariable001;

    // Automatic Variable Declarations
    const int autoA8F723D2_ae = 12;
    const int autoA8F723D2_ai = 1;
    const int auto8AA3098C_ae = 12;
    const int auto8AA3098C_ai = 1;
    const int auto8574D47A_ae = 8;
    const int auto8574D47A_ai = 1;
    const int auto2D626352_ae = 12;
    const int auto2D626352_ai = 1;
    const int autoB24CD316_ae = 2;
    const int autoB24CD316_ai = 1;

    // Variable Initialization
    lv_sent = 15;

    // Actions
    if (!runActions) {
        return true;
    }

    gv_boolWaveSending = true;
    BoardItemSetText(gv_ldbLeaderboards[13], 1, 1, (UnitTypeGetName(UnitTypeFromString(("Creep" + IntToString((gv_intWave + 1))))) + StringExternal("Param/Value/D9ADEF2B") + IntToText((gv_intWave + 1)) + StringExternal("Param/Value/18EABE9A") + StringExternal("Param/Value/3012002A") + StringToText(gv_strWaveIcon[(gv_intWave + 1)]) + StringExternal("Param/Value/C275B887")));
    gv_intWave += 1;
    if (((gv_intWave == 10) || (gv_intWave == 20) || (gv_intWave == 30) || (gv_intWave == 40) || (gv_intWave == 50) || (gv_intWave == 60) || (gv_intWave == 70))) {
        lv_sent = 1;
    }

    if ((gv_intWave == 71)) {
        lv_untitledVariable001 = 1;
        for ( ; ( (autoA8F723D2_ai >= 0 && lv_untitledVariable001 <= autoA8F723D2_ae) || (autoA8F723D2_ai < 0 && lv_untitledVariable001 >= autoA8F723D2_ae) ) ; lv_untitledVariable001 += autoA8F723D2_ai ) {
            if ((PlayerStatus(lv_untitledVariable001) == c_playerStatusActive) && (gv_intLives[lv_untitledVariable001] > 0)) {
                GameOver(lv_untitledVariable001, c_gameOverVictory, true, true);
            }
            else {
                GameOver(lv_untitledVariable001, c_gameOverDefeat, true, true);
            }
        }
    }

    while ((lv_sent != 0)) {
        lv_player = 1;
        for ( ; ( (auto8AA3098C_ai >= 0 && lv_player <= auto8AA3098C_ae) || (auto8AA3098C_ai < 0 && lv_player >= auto8AA3098C_ae) ) ; lv_player += auto8AA3098C_ai ) {
            gv_intPlantsSoldToday[lv_player] = 0;
            if ((gv_intLives[lv_player] > 0) && (PlayerStatus(lv_player) == c_playerStatusActive)) {
                if ((gv_intWave == 70)) {
                    UnitCreate(1, "KerriganEpilogue03", c_unitCreateIgnorePlacement, 13, PointFromId(950714846), 270.0);
                }
                else {
                    UnitCreate(1, UnitTypeFromString(("Creep" + IntToString(gv_intWave))), c_unitCreateIgnorePlacement, 13, PointFromId(950714846), 270.0);
                }
                if ((lv_once == false)) {
                    lv_differ = 2;
                    for ( ; ( (auto8574D47A_ai >= 0 && lv_differ <= auto8574D47A_ae) || (auto8574D47A_ai < 0 && lv_differ >= auto8574D47A_ae) ) ; lv_differ += auto8574D47A_ai ) {
                        if (true) {
                            lv_int2 = (UnitGetPropertyInt(UnitLastCreated(), c_unitPropLife, c_unitPropCurrent) + UnitGetPropertyInt(UnitLastCreated(), c_unitPropShields, c_unitPropCurrent) + UnitGetPropertyInt(UnitLastCreated(), c_unitPropEnergy, c_unitPropCurrent));
                            lv_int2 /= 100;
                            lv_int2 *= gv_intDifficultyPercent[lv_differ];
                            lv_int2 += (UnitGetPropertyInt(UnitLastCreated(), c_unitPropLife, c_unitPropCurrent) + UnitGetPropertyInt(UnitLastCreated(), c_unitPropShields, c_unitPropCurrent) + UnitGetPropertyInt(UnitLastCreated(), c_unitPropEnergy, c_unitPropCurrent));
                            gv_difficultylife[lv_differ][gv_intWave][0] = lv_int2;
                            if ((lv_int2 >= 500000)) {
                                gv_difficultylife[lv_differ][gv_intWave][0] = 500000.0;
                                lv_int2 -= 500000;
                                if ((lv_int2 >= 500000)) {
                                    gv_difficultylife[lv_differ][gv_intWave][1] = 500000.0;
                                    lv_int2 -= 500000;
                                    if ((lv_int2 >= 500000)) {
                                        gv_difficultylife[lv_differ][gv_intWave][2] = 500000.0;
                                        lv_int2 -= 500000;
                                        if ((lv_int2 >= 500000)) {
                                            Wait(10.0, c_timeGame);
                                            lv_plapper = 1;
                                            for ( ; ( (auto2D626352_ai >= 0 && lv_plapper <= auto2D626352_ae) || (auto2D626352_ai < 0 && lv_plapper >= auto2D626352_ae) ) ; lv_plapper += auto2D626352_ai ) {
                                                if ((gv_intDifficulty[lv_plapper] == lv_differ)) {
                                                    if ((gv_intWave == 60)) {
                                                        gv_intRespawnHPStored[lv_plapper][0] = lv_int2;
                                                    }
                                                    else {
                                                        if ((gv_intWave == 70)) {
                                                            gv_intRespawnHPStored[lv_plapper][1] = lv_int2;
                                                        }

                                                    }
                                                }

                                            }
                                        }

                                    }
                                    else {
                                        gv_difficultylife[lv_differ][gv_intWave][2] = lv_int2;
                                    }
                                }
                                else {
                                    gv_difficultylife[lv_differ][gv_intWave][1] = lv_int2;
                                }
                            }

                        }

                    }
                }

                lv_once = true;
                if (((gv_intWave == 60) || (gv_intWave == 70))) {
                    if ((gv_intWave == 60)) {
                        lv_bothi = 0;
                    }
                    else {
                        lv_bothi = 1;
                    }
                    if ((gv_intRespawnHPStored[lv_player][lv_bothi] >= 1)) {
                        lv_test = gv_intRespawnHPStored[lv_player][lv_bothi];
                        while ((lv_test >= 1)) {
                            UnitBehaviorAdd(UnitLastCreated(), "Respawns", UnitLastCreated(), 1);
                            gv_boolRespawns[lv_player] = true;
                            gv_intTotalCreeps += 1;
                            BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, (StringExternal("Param/Value/1471A235") + IntToText(gv_intTotalCreeps)));
                            lv_test -= 1500000;
                        }
                    }

                }

                lv_hp = 0;
                for ( ; ( (autoB24CD316_ai >= 0 && lv_hp <= autoB24CD316_ae) || (autoB24CD316_ai < 0 && lv_hp >= autoB24CD316_ae) ) ; lv_hp += autoB24CD316_ai ) {
                    if ((gv_difficultylife[gv_intDifficulty[lv_player]][gv_intWave][lv_hp] == 0.0)) {
                    }
                    else {
                        UnitBehaviorAdd(UnitLastCreated(), (("xel" + IntToString(gv_intDifficulty[lv_player]))), UnitLastCreated(), 1);
                        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, gv_difficultylife[gv_intDifficulty[lv_player]][gv_intWave][0]);
                        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, gv_difficultylife[gv_intDifficulty[lv_player]][gv_intWave][1]);
                        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropEnergyMax, gv_difficultylife[gv_intDifficulty[lv_player]][gv_intWave][2]);
                    }
                }
                if ((UnitHasBehavior2(UnitLastCreated(), (("xel" + IntToString(gv_intDifficulty[lv_player])))) == true)) {
                }
                else {
                    UnitBehaviorAdd(UnitLastCreated(), (IntToString(gv_intDifficulty[lv_player])), UnitLastCreated(), 1);
                }
                libNtve_gf_ShowHideUnit(UnitLastCreated(), false);
                if ((gv_intWave == 64)) {
                    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("VoidZealotWhirlwind", 0)), c_orderQueueReplace);
                }

                libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), true);
                UnitGroupAdd(gv_unitgroupCreeps[lv_player], UnitLastCreated());
                if ((PlayerStatus(lv_player) == c_playerStatusActive)) {
                    gv_intTotalCreeps += 1;
                    BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, (StringExternal("Param/Value/256E4F97") + IntToText(gv_intTotalCreeps)));
                }

            }

        }
        lv_sent -= 1;
        TriggerEnable(gt_onWaveEnds, true);
        if ((lv_sent == 0)) {
            TriggerExecute(gt_onSendWave, true, false);
            gv_boolWaveSending = false;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onSendBossWave_Init () {
    gt_onSendBossWave = TriggerCreate("gt_onSendBossWave_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onSendWave
//--------------------------------------------------------------------------------------------------
bool gt_onSendWave_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_untitledVariable001;
    int lv_untitledVariable002;
    unit lv_dAUNIT;

    // Automatic Variable Declarations
    const int auto5807B2AE_ae = 12;
    const int auto5807B2AE_ai = 1;
    const int autoC1386514_ae = 12;
    const int autoC1386514_ai = 1;
    const int autoF0BBC503_n = 15;
    int autoF0BBC503_i;
    const int auto5859B10F_ae = 12;
    const int auto5859B10F_ai = 1;
    const int auto3C556187_ae = 12;
    const int auto3C556187_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_boolWaveSpawning = true;
    if (((gv_intWave == 10) || (gv_intWave == 20) || (gv_intWave == 30) || (gv_intWave == 40))) {
        lv_untitledVariable002 = 1;
        for ( ; ( (auto5807B2AE_ai >= 0 && lv_untitledVariable002 <= auto5807B2AE_ae) || (auto5807B2AE_ai < 0 && lv_untitledVariable002 >= auto5807B2AE_ae) ) ; lv_untitledVariable002 += auto5807B2AE_ai ) {
            if ((PlayerStatus(lv_untitledVariable002) == c_playerStatusActive) && (gv_intLives[lv_untitledVariable002] > 0)) {
                lv_dAUNIT = UnitGroupRandomUnit(gv_unitgroupCreeps[lv_untitledVariable002], c_unitCountAlive);
                UnitGroupAdd(gv_unitgroupSentCreeps[lv_untitledVariable002], lv_dAUNIT);
                UnitGroupRemove(gv_unitgroupCreeps[lv_untitledVariable002], lv_dAUNIT);
                libNtve_gf_ShowHideUnit(lv_dAUNIT, true);
                libNtve_gf_MakeUnitInvulnerable(lv_dAUNIT, false);
                UnitSetPosition(lv_dAUNIT, PointFromName(("Player " + IntToString(lv_untitledVariable002) + " Point 1")), false);
                lv_untitledVariable001 = 1;
                for ( ; ( (autoC1386514_ai >= 0 && lv_untitledVariable001 <= autoC1386514_ae) || (autoC1386514_ai < 0 && lv_untitledVariable001 >= autoC1386514_ae) ) ; lv_untitledVariable001 += autoC1386514_ai ) {
                    UnitIssueOrder(lv_dAUNIT, OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(lv_untitledVariable002) + " Point " + IntToString(lv_untitledVariable001)))), c_orderQueueAddToEnd);
                }
            }

        }
    }
    else {
        for (autoF0BBC503_i = 1; autoF0BBC503_i <= autoF0BBC503_n; autoF0BBC503_i += 1) {
            lv_untitledVariable002 = 1;
            for ( ; ( (auto5859B10F_ai >= 0 && lv_untitledVariable002 <= auto5859B10F_ae) || (auto5859B10F_ai < 0 && lv_untitledVariable002 >= auto5859B10F_ae) ) ; lv_untitledVariable002 += auto5859B10F_ai ) {
                if ((PlayerStatus(lv_untitledVariable002) == c_playerStatusActive) && (gv_intLives[lv_untitledVariable002] > 0)) {
                    lv_dAUNIT = UnitGroupRandomUnit(gv_unitgroupCreeps[lv_untitledVariable002], c_unitCountAlive);
                    UnitGroupAdd(gv_unitgroupSentCreeps[lv_untitledVariable002], lv_dAUNIT);
                    UnitGroupRemove(gv_unitgroupCreeps[lv_untitledVariable002], lv_dAUNIT);
                    libNtve_gf_ShowHideUnit(lv_dAUNIT, true);
                    libNtve_gf_MakeUnitInvulnerable(lv_dAUNIT, false);
                    UnitSetPosition(lv_dAUNIT, PointFromName(("Player " + IntToString(lv_untitledVariable002) + " Point 1")), false);
                    UnitBehaviorAdd(lv_dAUNIT, "DistractingPropaganda32", lv_dAUNIT, FixedToInt(gv_realLevelingStats[lv_untitledVariable002][6]));
                    UnitBehaviorAdd(lv_dAUNIT, "DistractingPropaganda322", lv_dAUNIT, FixedToInt(gv_realLevelingStats[lv_untitledVariable002][7]));
                    lv_untitledVariable001 = 1;
                    for ( ; ( (auto3C556187_ai >= 0 && lv_untitledVariable001 <= auto3C556187_ae) || (auto3C556187_ai < 0 && lv_untitledVariable001 >= auto3C556187_ae) ) ; lv_untitledVariable001 += auto3C556187_ai ) {
                        UnitIssueOrder(lv_dAUNIT, OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(lv_untitledVariable002) + " Point " + IntToString(lv_untitledVariable001)))), c_orderQueueAddToEnd);
                    }
                }

            }
            Wait(0.7, c_timeGame);
        }
    }
    gv_boolWaveSpawning = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onSendWave_Init () {
    gt_onSendWave = TriggerCreate("gt_onSendWave_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onCreepReachesEnd
//--------------------------------------------------------------------------------------------------
bool gt_onCreepReachesEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_tHEPLAYER;
    int lv_untitledVariable002;

    // Automatic Variable Declarations
    const int auto7B8F7FDC_ae = 12;
    const int auto7B8F7FDC_ai = 1;
    unitgroup autoB196335E_g;
    int autoB196335E_u;
    unit autoB196335E_var;
    unitgroup auto1AA4AD8F_g;
    int auto1AA4AD8F_u;
    unit auto1AA4AD8F_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 13))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeSummoned) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Raynor01"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(EventUnit(), 14, false);
    lv_untitledVariable002 = 1;
    for ( ; ( (auto7B8F7FDC_ai >= 0 && lv_untitledVariable002 <= auto7B8F7FDC_ae) || (auto7B8F7FDC_ai < 0 && lv_untitledVariable002 >= auto7B8F7FDC_ae) ) ; lv_untitledVariable002 += auto7B8F7FDC_ai ) {
        if ((UnitGroupHasUnit(gv_unitgroupSentCreeps[lv_untitledVariable002], EventUnit()) == true)) {
            lv_tHEPLAYER = lv_untitledVariable002;
        }

    }
    if ((gv_boolRespawns[lv_tHEPLAYER] == true)) {
        gv_boolRespawns[lv_tHEPLAYER] = false;
        gv_intTotalCreeps -= 1;
        BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, (StringExternal("Param/Value/5C9C81ED") + IntToText(gv_intTotalCreeps)));
    }

    UnitKill(EventUnit());
    if (((gv_intWave == 10) || (gv_intWave == 20) || (gv_intWave == 30) || (gv_intWave == 40) || (gv_intWave == 50) || (gv_intWave == 60) || (gv_intWave == 70) || (UnitGetType(EventUnit()) == "lCreep41") || (UnitGetType(EventUnit()) == "Clreep42") || (UnitGetType(EventUnit()) == "pCreep43"))) {
        gv_intLives[lv_tHEPLAYER] -= 5;
        UIDisplayMessage(PlayerGroupSingle(lv_tHEPLAYER), c_messageAreaSubtitle, StringExternal("Param/Value/92858788"));
    }
    else {
        gv_intLives[lv_tHEPLAYER] -= 1;
        UIDisplayMessage(PlayerGroupSingle(lv_tHEPLAYER), c_messageAreaSubtitle, StringExternal("Param/Value/AB50796C"));
    }
    if ((gv_intLives[lv_tHEPLAYER] <= 0)) {
        gv_realEXPBackup[lv_tHEPLAYER] = UnitGetPropertyFixed(gv_builder[lv_tHEPLAYER], c_unitPropXP, c_unitPropCurrent);
        gv_intLives[lv_tHEPLAYER] = 0;
        SoundPlayForPlayer(SoundLink("Tychus_AC_MxFx_Event_Defeat", -1), c_maxPlayers, PlayerGroupAll(), 80.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(lv_tHEPLAYER), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_tHEPLAYER, false))) + StringExternal("Param/Value/B0D42FCD")));
        autoB196335E_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(lv_tHEPLAYER))), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoB196335E_u = UnitGroupCount(autoB196335E_g, c_unitCountAll);
        for (;; autoB196335E_u -= 1) {
            autoB196335E_var = UnitGroupUnitFromEnd(autoB196335E_g, autoB196335E_u);
            if (autoB196335E_var == null) { break; }
            UnitSetOwner(autoB196335E_var, 14, true);
        }
        auto1AA4AD8F_g = UnitGroup(null, c_playerAny, RegionFromName(("Player Region " + IntToString(lv_tHEPLAYER))), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto1AA4AD8F_u = UnitGroupCount(auto1AA4AD8F_g, c_unitCountAll);
        for (;; auto1AA4AD8F_u -= 1) {
            auto1AA4AD8F_var = UnitGroupUnitFromEnd(auto1AA4AD8F_g, auto1AA4AD8F_u);
            if (auto1AA4AD8F_var == null) { break; }
            UnitKill(auto1AA4AD8F_var);
        }
    }

    TriggerExecute(gt_updateLeaderboards, true, false);
    if ((gv_intLives[lv_tHEPLAYER] == 3) && (gv_boolMissionsCompleted[lv_tHEPLAYER][3] == false)) {
        PlayerModifyPropertyInt(lv_tHEPLAYER, c_playerPropVespene, c_playerPropOperAdd, 200);
        TechTreeUpgradeAddLevel(lv_tHEPLAYER, "Mission03", 1);
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        UIDisplayMessage(PlayerGroupSingle(lv_tHEPLAYER), c_messageAreaSubtitle, (StringExternal("Param/Value/1519E020") + (StringToText(gv_strMissionDescription[3]) + StringExternal("Param/Value/9261152A"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(lv_tHEPLAYER), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_tHEPLAYER, false))) + StringExternal("Param/Value/973F7381")) + (StringExternal("Param/Value/AAD44AAC") + StringExternal("Param/Value/A3D91116"))));
        gv_boolMissionsCompleted[lv_tHEPLAYER][3] = true;
        TextTagCreate((StringExternal("Param/Value/112598F3") + FixedToText((10.0 + gv_realEXPIncrease[lv_tHEPLAYER]), 1) + StringExternal("Param/Value/EE94525E")), 24, UnitGetPosition(gv_builder[lv_tHEPLAYER]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[lv_tHEPLAYER], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[lv_tHEPLAYER], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[lv_tHEPLAYER])));
        gv_realEXP[lv_tHEPLAYER] += (10.0 + gv_realEXPIncrease[lv_tHEPLAYER]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onCreepReachesEnd_Init () {
    gt_onCreepReachesEnd = TriggerCreate("gt_onCreepReachesEnd_Func");
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1088111056), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1911948996), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1865416288), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(886899149), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1204667131), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1204664535), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(25827822), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(921451932), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1293713608), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(1495354875), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(2040248162), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onCreepReachesEnd, null, PointFromId(2131424270), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onUnitBecomesIdle
//--------------------------------------------------------------------------------------------------
bool gt_onUnitBecomesIdle_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;
    int lv_tempt;
    int lv_pointlypoint;

    // Automatic Variable Declarations
    const int auto6ABD794B_ae = 12;
    const int auto6ABD794B_ai = 1;
    const int auto6CFDE56F_ae = 12;
    const int auto6CFDE56F_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeSummoned) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_tempt = 1;
    for ( ; ( (auto6ABD794B_ai >= 0 && lv_tempt <= auto6ABD794B_ae) || (auto6ABD794B_ai < 0 && lv_tempt >= auto6ABD794B_ae) ) ; lv_tempt += auto6ABD794B_ai ) {
        if ((libNtve_gf_UnitInRegion(EventUnit(), RegionFromName(("Player Region " + IntToString(lv_tempt)))) == true)) {
            lv_player = lv_tempt;
        }

    }
    lv_pointlypoint = 1;
    for ( ; ( (auto6CFDE56F_ai >= 0 && lv_pointlypoint <= auto6CFDE56F_ae) || (auto6CFDE56F_ai < 0 && lv_pointlypoint >= auto6CFDE56F_ae) ) ; lv_pointlypoint += auto6CFDE56F_ai ) {
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(lv_player) + " Point " + IntToString(lv_pointlypoint)))), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onUnitBecomesIdle_Init () {
    gt_onUnitBecomesIdle = TriggerCreate("gt_onUnitBecomesIdle_Func");
    TriggerAddEventUnitBecomesIdle(gt_onUnitBecomesIdle, null, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(353931464), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1615261545), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1183384720), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(500875256), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(419556044), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1610269992), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1695337536), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1433248755), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(594189789), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1492384314), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(395036504), 1.0, true);
    TriggerAddEventUnitRangePoint(gt_onUnitBecomesIdle, null, PointFromId(1983899809), 1.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onCreationMechaBroodling
//--------------------------------------------------------------------------------------------------
bool gt_onCreationMechaBroodling_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "Broodling")) {
        UnitBehaviorAdd(EventUnit(), "nocreepattribute", EventUnit(), 1);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onCreationMechaBroodling_Init () {
    gt_onCreationMechaBroodling = TriggerCreate("gt_onCreationMechaBroodling_Func");
    TriggerAddEventUnitRegion(gt_onCreationMechaBroodling, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onSpecialBossSent
//--------------------------------------------------------------------------------------------------
bool gt_onSpecialBossSent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_playerIndex;
    int lv_player;

    // Automatic Variable Declarations
    const int auto8906F30D_ae = 12;
    const int auto8906F30D_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "KerriganEpilogue03") || (UnitGetType(EventUnit()) == "Creep60")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_playerIndex = 1;
    for ( ; ( (auto8906F30D_ai >= 0 && lv_playerIndex <= auto8906F30D_ae) || (auto8906F30D_ai < 0 && lv_playerIndex >= auto8906F30D_ae) ) ; lv_playerIndex += auto8906F30D_ai ) {
        if ((libNtve_gf_UnitInRegion(EventUnit(), RegionFromName(("Player Region " + IntToString(lv_playerIndex)))) == true)) {
            lv_player = lv_playerIndex;
        }

    }
    gv_intPoint[lv_player] += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onSpecialBossSent_Init () {
    gt_onSpecialBossSent = TriggerCreate("gt_onSpecialBossSent_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: onWaveEnds
//--------------------------------------------------------------------------------------------------
bool gt_onWaveEnds_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    int lv_untitledVariable001;
    int lv_untitledVariable002;
    int lv_untitledVariable003;
    int lv_untitledVariable005;
    int lv_untitledVariable007;
    int lv_kILLINGPLAYER;
    text lv_blabla;
    int[13] lv_texttag;
    int lv_untitledVariable004;
    int lv_randomitem;
    int lv_untitledVariable006;

    // Automatic Variable Declarations
    const int autoAAB60E73_ae = 12;
    const int autoAAB60E73_ai = 1;
    const int auto7D9DABCD_ae = 12;
    const int auto7D9DABCD_ai = 1;
    const int auto95945E9D_ae = 3;
    const int auto95945E9D_ai = 1;
    unitgroup autoA5704247_g;
    int autoA5704247_u;
    unit autoA5704247_var;
    unitgroup auto709F5837_g;
    int auto709F5837_u;
    unit auto709F5837_var;
    unitgroup auto43D09125_g;
    int auto43D09125_u;
    unit auto43D09125_var;
    const int auto04A41743_ae = 12;
    const int auto04A41743_ai = 1;
    const int auto449E9B15_ae = 12;
    const int auto449E9B15_ai = 1;
    const int auto9BC674D5_n = 10;
    int auto9BC674D5_i;
    const int auto4F7BAC85_ae = 12;
    const int auto4F7BAC85_ai = 1;

    // Variable Initialization
    for (init_i = 0; init_i <= 12; init_i += 1) {
        lv_texttag[init_i] = c_textTagNone;
    }
    lv_randomitem = RandomInt(1, 17);

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeSummoned) == true))) {
            return false;
        }

        if (!((gv_boolWaveSending == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "lCreep41"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Clreep42"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "pCreep43"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_intTotalCreeps -= 1;
    BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, (StringExternal("Param/Value/EB8D3B06") + IntToText(gv_intTotalCreeps)));
    lv_kILLINGPLAYER = 1;
    for ( ; ( (autoAAB60E73_ai >= 0 && lv_kILLINGPLAYER <= autoAAB60E73_ae) || (autoAAB60E73_ai < 0 && lv_kILLINGPLAYER >= autoAAB60E73_ae) ) ; lv_kILLINGPLAYER += autoAAB60E73_ai ) {
        if ((UnitGroupHasUnit(gv_unitgroupSentCreeps[lv_kILLINGPLAYER], EventUnit()) == true)) {
            TriggerExecute(gt_updateLeaderboards, true, false);
            if ((UnitGetOwner(EventUnit()) == 13)) {
                PlayerModifyPropertyFixed(lv_kILLINGPLAYER, c_playerPropMinerals, c_playerPropOperAdd, gv_realLevelingStats[lv_kILLINGPLAYER][7]);
                if ((gv_realLevelingStats[lv_kILLINGPLAYER][10] >= RandomFixed(0.1, 100.0))) {
                    UnitCreate(1, UnitTypeFromString(("Item" + IntToString(lv_randomitem))), 0, lv_kILLINGPLAYER, UnitGetPosition(EventUnit()), 270.0);
                }

                if (((UnitGetType(EventUnit()) == "KerriganEpilogue03") || (UnitGetType(EventUnit()) == "Creep60"))) {
                    if ((gv_boolRespawns[lv_kILLINGPLAYER] == true) && (UnitGetType(EventUnit()) == "Creep60")) {
                        libNtve_gf_UnitCreateFacingPoint(1, "Creep60", c_unitCreateIgnorePlacement, 13, UnitGetPosition(EventUnit()), UnitGetPosition(EventUnit()));
                        if ((gv_intDifficulty[lv_kILLINGPLAYER] == 6)) {
                            UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 500000.0);
                            UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, 100000.0);
                        }
                        else {
                            if (((gv_intDifficulty[lv_kILLINGPLAYER] == 8) || (gv_intDifficulty[lv_kILLINGPLAYER] == 7))) {
                                UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 500000.0);
                                UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, 250000.0);
                            }

                        }
                        gv_boolRespawns[lv_kILLINGPLAYER] = false;
                        UnitBehaviorAdd(UnitLastCreated(), (("xel" + IntToString(gv_intDifficulty[gv_intDifficulty[lv_kILLINGPLAYER]]))), UnitLastCreated(), 1);
                        while ((gv_intPoint[lv_kILLINGPLAYER] != 13)) {
                            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(lv_kILLINGPLAYER) + " Point " + IntToString(gv_intPoint[lv_kILLINGPLAYER])))), c_orderQueueAddToEnd);
                            gv_intPoint[lv_kILLINGPLAYER] += 1;
                        }
                    }

                    if ((gv_boolRespawns[lv_kILLINGPLAYER] == true) && (UnitGetType(EventUnit()) == "KerriganEpilogue03")) {
                        libNtve_gf_UnitCreateFacingPoint(1, "Creep60", c_unitCreateIgnorePlacement, 13, UnitGetPosition(EventUnit()), UnitGetPosition(EventUnit()));
                        if (((gv_intDifficulty[lv_kILLINGPLAYER] == 5))) {
                            UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 500000.0);
                            UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, 400000.0);
                            UnitSetPropertyFixed(UnitLastCreated(), c_unitPropEnergyMax, 0.0);
                        }
                        else {
                            if (((gv_intDifficulty[lv_kILLINGPLAYER] == 6))) {
                                UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 500000.0);
                                UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, 500000.0);
                                UnitSetPropertyFixed(UnitLastCreated(), c_unitPropEnergyMax, 300000.0);
                            }
                            else {
                                if (((gv_intDifficulty[lv_kILLINGPLAYER] == 8) || (gv_intDifficulty[lv_kILLINGPLAYER] == 7))) {
                                    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 500000.0);
                                    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropShieldsMax, 500000.0);
                                    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropEnergyMax, 500000.0);
                                }

                            }
                        }
                        gv_boolRespawns[lv_kILLINGPLAYER] = false;
                        UnitBehaviorAdd(UnitLastCreated(), (("xel" + IntToString(gv_intDifficulty[gv_intDifficulty[lv_kILLINGPLAYER]]))), UnitLastCreated(), 1);
                        while ((gv_intPoint[lv_kILLINGPLAYER] != 13)) {
                            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(lv_kILLINGPLAYER) + " Point " + IntToString(gv_intPoint[lv_kILLINGPLAYER])))), c_orderQueueAddToEnd);
                            gv_intPoint[lv_kILLINGPLAYER] += 1;
                        }
                    }

                }

            }

            if (((gv_boolWaveEndingInProgress == false) || (gv_intTotalCreeps == 0))) {
                gv_boolWaveEndingInProgress = true;
                if ((gv_intTotalCreeps == 0)) {
                    gv_intTodaysCropPrices[0][1] = RandomInt(50, 100);
                    gv_intTodaysCropPrices[0][2] = RandomInt(50, 100);
                    gv_intTodaysCropPrices[0][3] = RandomInt(50, 100);
                    SoundPlayForPlayer(SoundLink("KerriganLevelUpSound", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
                    lv_untitledVariable001 = 1;
                    for ( ; ( (auto7D9DABCD_ai >= 0 && lv_untitledVariable001 <= auto7D9DABCD_ae) || (auto7D9DABCD_ai < 0 && lv_untitledVariable001 >= auto7D9DABCD_ae) ) ; lv_untitledVariable001 += auto7D9DABCD_ai ) {
                        PlayerModifyPropertyInt(lv_untitledVariable001, c_playerPropVespene, c_playerPropOperAdd, 200);
                        PlayerModifyPropertyInt(lv_untitledVariable001, c_playerPropMinerals, c_playerPropOperAdd, 150);
                        lv_untitledVariable002 = 1;
                        for ( ; ( (auto95945E9D_ai >= 0 && lv_untitledVariable002 <= auto95945E9D_ae) || (auto95945E9D_ai < 0 && lv_untitledVariable002 >= auto95945E9D_ae) ) ; lv_untitledVariable002 += auto95945E9D_ai ) {
                            gv_intTodaysCropPrices[lv_untitledVariable001][lv_untitledVariable002] = gv_intTodaysCropPrices[0][lv_untitledVariable002];
                            gv_intTodaysCropPrices[lv_untitledVariable001][lv_untitledVariable002] += gv_intMaxCropPrices[lv_untitledVariable001];
                        }
                        UIDisplayMessage(PlayerGroupSingle(lv_untitledVariable001), c_messageAreaSubtitle, (StringExternal("Param/Value/8BD77E13") + StringExternal("Param/Value/32E1441B") + IntToText((50 + gv_intMaxCropPrices[lv_untitledVariable001])) + StringExternal("Param/Value/E5DE490E") + IntToText((100 + gv_intMaxCropPrices[lv_untitledVariable001])) + StringExternal("Param/Value/15B8269D") + StringExternal("Param/Value/E6B7DE0C") + IntToText(gv_intTodaysCropPrices[lv_untitledVariable001][1]) + StringExternal("Param/Value/1DD16259") + IntToText(gv_intTodaysCropPrices[lv_untitledVariable001][2]) + StringExternal("Param/Value/64D50BFA") + IntToText(gv_intTodaysCropPrices[lv_untitledVariable001][3])));
                    }
                    autoA5704247_g = UnitGroup("SupplyDepot2", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                    autoA5704247_u = UnitGroupCount(autoA5704247_g, c_unitCountAll);
                    for (;; autoA5704247_u -= 1) {
                        autoA5704247_var = UnitGroupUnitFromEnd(autoA5704247_g, autoA5704247_u);
                        if (autoA5704247_var == null) { break; }
                        if ((libNtve_gf_UnitIsUnderConstruction(autoA5704247_var) == false) && ((UnitGetPropertyFixed(autoA5704247_var, c_unitPropLife, c_unitPropCurrent) == 200.0) || (UnitGetPropertyFixed(autoA5704247_var, c_unitPropLife, c_unitPropCurrent) == 400.0))) {
                            UnitDamage(autoA5704247_var, "RoachlingNeedleClawsDamage", autoA5704247_var, 0.0);
                            gv_intCrops[UnitGetOwner(autoA5704247_var)][1] += 1;
                        }

                    }
                    auto709F5837_g = UnitGroup("Pear", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                    auto709F5837_u = UnitGroupCount(auto709F5837_g, c_unitCountAll);
                    for (;; auto709F5837_u -= 1) {
                        auto709F5837_var = UnitGroupUnitFromEnd(auto709F5837_g, auto709F5837_u);
                        if (auto709F5837_var == null) { break; }
                        if ((libNtve_gf_UnitIsUnderConstruction(auto709F5837_var) == false) && ((UnitGetPropertyFixed(auto709F5837_var, c_unitPropLife, c_unitPropCurrent) == 200.0) || (UnitGetPropertyFixed(auto709F5837_var, c_unitPropLife, c_unitPropCurrent) == 400.0))) {
                            UnitDamage(auto709F5837_var, "RoachlingNeedleClawsDamage", auto709F5837_var, 0.0);
                            gv_intCrops[UnitGetOwner(auto709F5837_var)][2] += 1;
                        }

                    }
                    auto43D09125_g = UnitGroup("SupplyDepot22", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                    auto43D09125_u = UnitGroupCount(auto43D09125_g, c_unitCountAll);
                    for (;; auto43D09125_u -= 1) {
                        auto43D09125_var = UnitGroupUnitFromEnd(auto43D09125_g, auto43D09125_u);
                        if (auto43D09125_var == null) { break; }
                        if ((libNtve_gf_UnitIsUnderConstruction(auto43D09125_var) == false) && ((UnitGetPropertyFixed(auto43D09125_var, c_unitPropLife, c_unitPropCurrent) == 200.0) || (UnitGetPropertyFixed(auto43D09125_var, c_unitPropLife, c_unitPropCurrent) == 400.0))) {
                            UnitDamage(auto43D09125_var, "RoachlingNeedleClawsDamage", auto43D09125_var, 0.0);
                            gv_intCrops[UnitGetOwner(auto43D09125_var)][3] += 1;
                        }

                    }
                    TriggerExecute(gt_updateLeaderboards, true, false);
                    gv_intWaveCountdown = 10;
                    lv_untitledVariable005 = 1;
                    for ( ; ( (auto04A41743_ai >= 0 && lv_untitledVariable005 <= auto04A41743_ae) || (auto04A41743_ai < 0 && lv_untitledVariable005 >= auto04A41743_ae) ) ; lv_untitledVariable005 += auto04A41743_ai ) {
                        if ((PlayerStatus(lv_untitledVariable005) == c_playerStatusActive) && (gv_intLives[lv_untitledVariable005] > 0)) {
                            TextTagCreate((StringExternal("Param/Value/AB1DEA3E") + FixedToText((gv_intWave + gv_realEXPIncrease[lv_untitledVariable005]), 1) + StringExternal("Param/Value/913D010E")), 24, UnitGetPosition(gv_builder[lv_untitledVariable005]), 1.0, true, false, PlayerGroupAll());
                            UnitSetPropertyFixed(gv_builder[lv_untitledVariable005], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[lv_untitledVariable005], c_unitPropXP, c_unitPropCurrent) + (gv_intWave + gv_realEXPIncrease[lv_untitledVariable005])));
                            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                            gv_realEXP[lv_untitledVariable005] += (10.0 + gv_realEXPIncrease[lv_untitledVariable005]);
                            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                            lv_texttag[lv_untitledVariable005] = TextTagLastCreated();
                        }

                    }
                    if (((gv_intWave == 5) || (gv_intWave == 10) || (gv_intWave == 15) || (gv_intWave == 20) || (gv_intWave == 25) || (gv_intWave == 30) || (gv_intWave == 35) || (gv_intWave == 40) || (gv_intWave == 45) || (gv_intWave == 50) || (gv_intWave == 55) || (gv_intWave == 60) || (gv_intWave == 65))) {
                        lv_untitledVariable003 = 1;
                        for ( ; ( (auto449E9B15_ai >= 0 && lv_untitledVariable003 <= auto449E9B15_ae) || (auto449E9B15_ai < 0 && lv_untitledVariable003 >= auto449E9B15_ae) ) ; lv_untitledVariable003 += auto449E9B15_ai ) {
                            if ((PlayerStatus(lv_untitledVariable003) == c_playerStatusActive)) {
                                DialogSetVisible(gv_dlgRewardSelection[lv_untitledVariable003], PlayerGroupSingle(lv_untitledVariable003), true);
                            }

                        }
                    }

                    for (auto9BC674D5_i = 1; auto9BC674D5_i <= auto9BC674D5_n; auto9BC674D5_i += 1) {
                        BoardItemSetText(gv_ldbLeaderboards[13], 1, c_boardRowHeader, (StringExternal("Param/Value/F5EF1F20") + IntToText(gv_intWaveCountdown) + StringExternal("Param/Value/CE27D4B9")));
                        BoardItemSetText(gv_ldbLeaderboards[13], 1, 1, (UnitTypeGetName(UnitTypeFromString(("Creep" + IntToString((gv_intWave + 1))))) + StringExternal("Param/Value/0DF431A7") + IntToText((gv_intWave + 1)) + StringExternal("Param/Value/AA61D4CC") + StringExternal("Param/Value/14F94E63") + StringToText(gv_strWaveIcon[(gv_intWave + 1)]) + StringExternal("Param/Value/3E6DED0E")));
                        gv_intWaveCountdown -= 1;
                        Wait(1.0, c_timeGame);
                        if ((gv_intWaveCountdown == 8)) {
                            lv_untitledVariable006 = 1;
                            for ( ; ( (auto4F7BAC85_ai >= 0 && lv_untitledVariable006 <= auto4F7BAC85_ae) || (auto4F7BAC85_ai < 0 && lv_untitledVariable006 >= auto4F7BAC85_ae) ) ; lv_untitledVariable006 += auto4F7BAC85_ai ) {
                                TextTagDestroy(lv_texttag[lv_untitledVariable006]);
                            }
                        }

                    }
                    BoardItemSetText(gv_ldbLeaderboards[13], 1, c_boardRowHeader, StringExternal("Param/Value/E5AA29F1"));
                    gv_boolWaveEndingInProgress = false;
                    TriggerExecute(gt_onSendBossWave, true, false);
                }

            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onWaveEnds_Init () {
    gt_onWaveEnds = TriggerCreate("gt_onWaveEnds_Func");
    TriggerEnable(gt_onWaveEnds, false);
    TriggerAddEventUnitDied(gt_onWaveEnds, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: timerUnitStuk
//--------------------------------------------------------------------------------------------------
bool gt_timerUnitStuk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_intWaveCountdown == 0))) {
            return false;
        }

        if (!((gv_boolWaveSpawning == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(5.0, c_timeGame);
    if ((UnitGroupCount(UnitGroup(UnitTypeFromString(("Creep" + IntToString(gv_intWave))), 13, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (gv_intWaveCountdown == 0) && (gv_boolWaveSpawning == false)) {
        Wait(5.0, c_timeGame);
        if ((UnitGroupCount(UnitGroup(UnitTypeFromString(("Creep" + IntToString(gv_intWave))), 13, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (gv_intWaveCountdown == 0) && (gv_boolWaveSpawning == false)) {
            gv_intTotalCreeps = 1;
            BoardItemSetText(gv_ldbLeaderboards[13], 1, 2, (StringExternal("Param/Value/BEB40FBF") + IntToText(gv_intTotalCreeps)));
            UnitCreate(1, "Creep1", c_unitCreateIgnorePlacement, 13, PointFromId(950714846), 270.0);
            UnitKill(UnitLastCreated());
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_timerUnitStuk_Init () {
    gt_timerUnitStuk = TriggerCreate("gt_timerUnitStuk_Func");
    TriggerAddEventTimePeriodic(gt_timerUnitStuk, 5.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onBuyRandomItem
//--------------------------------------------------------------------------------------------------
bool gt_onBuyRandomItem_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randomitem;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_randomitem = RandomInt(1, 17);

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitProgressUnit()) == "Replicant"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_intItemsBought[EventPlayer()] += 1;
    libNtve_gf_ReplaceUnit(EventUnitProgressUnit(), UnitTypeFromString(("Item" + IntToString(lv_randomitem))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
    if ((gv_intItemsBought[EventPlayer()] == 7) && (gv_boolMissionsCompleted[EventPlayer()][24] == false)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission24", 1);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/66893F44") + (StringToText(gv_strMissionDescription[24]) + StringExternal("Param/Value/033C4DF6"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/71BBE491")) + (StringExternal("Param/Value/5F07258C") + StringExternal("Param/Value/8BEEF111"))));
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        gv_boolMissionsCompleted[EventPlayer()][24] = true;
        TextTagCreate((StringExternal("Param/Value/DDE6BB5A") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/AC86075E")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onBuyRandomItem_Init () {
    gt_onBuyRandomItem = TriggerCreate("gt_onBuyRandomItem_Func");
    TriggerAddEventUnitTrainProgress(gt_onBuyRandomItem, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onSell
//--------------------------------------------------------------------------------------------------
bool gt_onSell_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("inventory", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
    gv_intTowerSold[EventPlayer()] += 1;
    UnitKill(EventUnit());
    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/FF2CFE01") + TextWithColor(IntToText(UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostMinerals)), libNtve_gf_ConvertPlayerColorToColor(3)) + TextWithColor(StringExternal("Param/Value/5F3DAC0D"), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(3, true))) + TextWithColor(IntToText(UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostVespene)), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(7, true))) + TextWithColor(StringExternal("Param/Value/086BAA21"), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(7, true))) + StringExternal("Param/Value/F268C1AA") + TextWithColor(UnitGetName(EventUnit()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), true)))));
    PlayerModifyPropertyInt(UnitGetOwner(EventUnit()), c_playerPropMinerals, c_playerPropOperAdd, UnitTypeGetCost(UnitGetType(EventUnit()), c_unitCostMinerals));
    if ((UnitGetType(EventUnit()) == "T4U1")) {
        gv_auratowers[EventPlayer()][0] = false;
    }
    else {
        if ((UnitGetType(EventUnit()) == "T4U2")) {
            gv_auratowers[EventPlayer()][1] = false;
        }
        else {
            if ((UnitGetType(EventUnit()) == "T5U4")) {
                gv_auratowers[EventPlayer()][2] = false;
            }

        }
    }
    if ((gv_intTowerSold[EventPlayer()] == 10) && (gv_boolMissionsCompleted[EventPlayer()][25] == false)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission25", 1);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/7EABCA16") + (StringToText(gv_strMissionDescription[25]) + StringExternal("Param/Value/7C0AD9FF"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/26381D49")) + (StringExternal("Param/Value/1364FF05") + StringExternal("Param/Value/506D950D"))));
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        gv_boolMissionsCompleted[EventPlayer()][25] = true;
        TextTagCreate((StringExternal("Param/Value/34ADC0EB") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/F343A1F6")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onSell_Init () {
    gt_onSell = TriggerCreate("gt_onSell_Func");
    TriggerAddEventUnitAbility(gt_onSell, null, AbilityCommand("GuardianShield", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onMerge
//--------------------------------------------------------------------------------------------------
bool gt_onMerge_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_tier;
    string lv_findTierString;
    string lv_unitstring;
    string lv_soundlinkstring;
    soundlink lv_soundlink;
    int lv_unit;
    int lv_unit2;
    int lv_kills;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_findTierString = "";
    lv_unitstring = "";
    lv_soundlinkstring = "";
    lv_soundlink = SoundLink("AbathurA_BadLZ", -1);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitProgressUnit()) == "redoartifact2")) {
        lv_unit = RandomInt(1, 17);
        libNtve_gf_ReplaceUnit(EventUnit(), UnitTypeFromString(("Item" + IntToString(lv_unit))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
        UnitSelect(libNtve_gf_LastReplacedUnit(), EventPlayer(), true);
        UnitKill(EventUnitProgressUnit());
    }

    if (((UnitGetType(EventUnit()) == UnitGetType(EventUnitTargetUnit())) || (UnitGetType(EventUnitProgressUnit()) == "redoartifact"))) {
        if ((UnitGetType(EventUnit()) == UnitGetType(EventUnitTargetUnit()))) {
            gv_intMerges[EventPlayer()] += 1;
            lv_findTierString = StringSub((UnitGetType(EventUnit())), 2, 2);
            lv_tier = StringToInt(lv_findTierString);
            if ((lv_tier != 6)) {
                lv_unit = RandomInt(1, 7);
            }
            else {
                lv_unit = RandomInt(1, 21);
            }
            lv_kills += libNtve_gf_UnitGetPropertyKills(EventUnitTargetUnit(), c_unitPropCurrent);
            lv_kills += libNtve_gf_UnitGetPropertyKills(EventUnit(), c_unitPropCurrent);
            UnitRemove(EventUnitTargetUnit());
            lv_tier += 1;
            UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (lv_tier + gv_realEXPIncrease[EventPlayer()])));
            gv_realEXP[EventPlayer()] += (lv_tier + gv_realEXPIncrease[EventPlayer()]);
            lv_unitstring = ("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit));
            lv_soundlinkstring = CatalogFieldValueGet(c_gameCatalogActor, lv_unitstring, "SoundArray[" + IntToString(1) + "]", c_playerAny);
            lv_soundlink = SoundLink((lv_soundlinkstring), c_soundIndexAny);
            libNtve_gf_ReplaceUnit(EventUnit(), UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
            SoundPlayForPlayer(lv_soundlink, UnitGetOwner(EventUnitProgressUnit()), PlayerGroupSingle(EventPlayer()), 500.0, 0.0);
            libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Protoss, UnitGetPosition(EventUnit()));
            UnitSetPropertyFixed(libNtve_gf_LastReplacedUnit(), c_unitPropKills, lv_kills);
            UnitControlGroupAddUnit(EventPlayer(), 6, libNtve_gf_LastReplacedUnit());
            TextTagCreate((StringExternal("Param/Value/A139A243") + FixedToText((lv_tier + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/695E4873")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            UnitSelect(libNtve_gf_LastReplacedUnit(), EventPlayer(), true);
            if ((UnitGetType(EventUnit()) == "T4U1")) {
                if ((TechTreeUnitCount(EventPlayer(), "T4U1", c_techCountCompleteOnly) >= 1)) {
                }
                else {
                    gv_auratowers[EventPlayer()][0] = false;
                }
            }
            else {
                if ((UnitGetType(EventUnit()) == "T4U2")) {
                    gv_auratowers[EventPlayer()][1] = false;
                    if ((TechTreeUnitCount(EventPlayer(), "T4U2", c_techCountCompleteOnly) >= 1)) {
                    }
                    else {
                        gv_auratowers[EventPlayer()][0] = false;
                    }
                }
                else {
                    if ((UnitGetType(EventUnit()) == "T5U4")) {
                        if ((TechTreeUnitCount(EventPlayer(), "T5U4", c_techCountCompleteOnly) >= 1)) {
                        }
                        else {
                            gv_auratowers[EventPlayer()][0] = false;
                        }
                    }

                }
            }
            if ((lv_unitstring == "T4U1")) {
                gv_auratowers[EventPlayer()][0] = true;
            }
            else {
                if ((lv_unitstring == "T4U2")) {
                    gv_auratowers[EventPlayer()][1] = true;
                }
                else {
                    if ((lv_unitstring == "T5U4")) {
                        gv_auratowers[EventPlayer()][2] = true;
                    }

                }
            }
            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }
        else {
            lv_tier = 6;
            lv_findTierString = StringSub((UnitGetType(EventUnit())), 4, 5);
            lv_unit2 = StringToInt(lv_findTierString);
            lv_unit = RandomInt(1, 21);
            while ((lv_unit2 == lv_unit)) {
                lv_unit = RandomInt(1, 21);
            }
            lv_unitstring = ("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit));
            lv_soundlinkstring = CatalogFieldValueGet(c_gameCatalogActor, lv_unitstring, "SoundArray[" + IntToString(1) + "]", c_playerAny);
            lv_soundlink = SoundLink((lv_soundlinkstring), c_soundIndexAny);
            gv_intTest[lv_unit] += 1;
            lv_kills += libNtve_gf_UnitGetPropertyKills(EventUnit(), c_unitPropCurrent);
            UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("inventory", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
            SoundPlayForPlayer(lv_soundlink, UnitGetOwner(EventUnitProgressUnit()), PlayerGroupSingle(EventPlayer()), 500.0, 0.0);
            libNtve_gf_ReplaceUnit(EventUnit(), UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
            UnitBehaviorAdd(libNtve_gf_LastReplacedUnit(), "rerolled", libNtve_gf_LastReplacedUnit(), 1);
            UnitSetPropertyFixed(libNtve_gf_LastReplacedUnit(), c_unitPropKills, lv_kills);
            UnitSelect(libNtve_gf_LastReplacedUnit(), EventPlayer(), true);
            UnitControlGroupAddUnit(EventPlayer(), 6, libNtve_gf_LastReplacedUnit());
            UnitKill(EventUnitProgressUnit());
        }
    }
    else {
        if (((UnitGetType(EventUnitProgressUnit()) == "redoartifact") || (UnitGetType(EventUnitProgressUnit()) == "redoartifact2") || (UnitGetType(EventUnitProgressUnit()) == "Replicant") || (UnitGetType(EventUnitProgressUnit()) == "lCreep41") || (UnitGetType(EventUnitProgressUnit()) == "Clreep42") || (UnitGetType(EventUnitProgressUnit()) == "pCreep43"))) {
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/16373DB3"));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onMerge_Init () {
    gt_onMerge = TriggerCreate("gt_onMerge_Func");
    TriggerAddEventUnitAbility(gt_onMerge, null, AbilityCommand("Feedback", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitTrainProgress(gt_onMerge, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onBuild
//--------------------------------------------------------------------------------------------------
bool gt_onBuild_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unitstring;
    string lv_soundlinkstring;
    soundlink lv_soundlink;
    int lv_unit;
    int lv_tier;
    bool lv_selected;
    int lv_plantCount;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unitstring = "";
    lv_soundlinkstring = "";
    lv_soundlink = SoundLink("AbathurA_BadLZ", -1);
    lv_unit = RandomInt(1, 7);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitProgressUnit()) == "SupplyDepot")) {
        if ((RandomInt(0, 100) < (4 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2])))) {
            lv_tier = 3;
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(UnitGetOwner(EventUnitProgressUnit())), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(EventUnitProgressUnit()), false))) + StringExternal("Param/Value/FEFFB8E7") + IntToText((4 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2]))) + StringExternal("Param/Value/297731F3") + UnitTypeGetName(UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))))));
        }
        else {
            if ((RandomInt(0, 100) < (12 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2])))) {
                lv_tier = 2;
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(UnitGetOwner(EventUnitProgressUnit())), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(EventUnitProgressUnit()), false))) + StringExternal("Param/Value/ED3EC0BE") + IntToText((12 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2]))) + StringExternal("Param/Value/A7D9C27A") + UnitTypeGetName(UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))))));
            }
            else {
                lv_tier = 1;
            }
        }
        lv_unitstring = ("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit));
        lv_soundlinkstring = CatalogFieldValueGet(c_gameCatalogActor, lv_unitstring, "SoundArray[" + IntToString(1) + "]", c_playerAny);
        lv_soundlink = SoundLink((lv_soundlinkstring), c_soundIndexAny);
        if ((UnitIsSelected(EventUnitProgressUnit(), UnitGetOwner(EventUnitProgressUnit())) == true)) {
            lv_selected = true;
        }
        else {
            lv_selected = false;
        }
        libNtve_gf_ReplaceUnit(EventUnitProgressUnit(), UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
        if ((lv_selected == true)) {
            UnitSelect(libNtve_gf_LastReplacedUnit(), UnitGetOwner(EventUnitProgressUnit()), true);
        }

        UnitControlGroupAddUnit(EventPlayer(), 6, libNtve_gf_LastReplacedUnit());
        SoundPlayForPlayer(lv_soundlink, c_maxPlayers, PlayerGroupSingle(UnitGetOwner(EventUnitProgressUnit())), 500.0, 0.0);
        libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Protoss, UnitGetPosition(EventUnitProgressUnit()));
        TextTagCreate((StringExternal("Param/Value/48BFD545") + FixedToText((lv_tier + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/AD7EF517")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (lv_tier + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        gv_realEXP[EventPlayer()] += (lv_tier + gv_realEXPIncrease[UnitGetOwner(EventUnitProgressUnit())]);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }
    else {
        if ((UnitGetType(EventUnitProgressUnit()) == "Pylon")) {
            if ((RandomInt(0, 100) < (10 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2])))) {
                lv_tier = 5;
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(UnitGetOwner(EventUnitProgressUnit())), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(UnitGetOwner(EventUnitProgressUnit()), false))) + StringExternal("Param/Value/61F3E340") + IntToText((10 + FixedToInt(gv_realLevelingStats[UnitGetOwner(EventUnitProgressUnit())][2]))) + StringExternal("Param/Value/F0B7848B") + UnitTypeGetName(UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))))));
            }
            else {
                lv_tier = 4;
            }
            lv_unitstring = ("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit));
            lv_soundlinkstring = CatalogFieldValueGet(c_gameCatalogActor, lv_unitstring, "SoundArray[" + IntToString(1) + "]", c_playerAny);
            lv_soundlink = SoundLink((lv_soundlinkstring), c_soundIndexAny);
            if ((UnitIsSelected(EventUnitProgressUnit(), UnitGetOwner(EventUnitProgressUnit())) == true)) {
                lv_selected = true;
            }
            else {
                lv_selected = false;
            }
            libNtve_gf_ReplaceUnit(EventUnitProgressUnit(), UnitTypeFromString(("T" + IntToString(lv_tier) + "U" + IntToString(lv_unit))), libNtve_ge_ReplaceUnitOptions_OldUnitsRelative);
            if ((lv_selected == true)) {
                UnitSelect(libNtve_gf_LastReplacedUnit(), UnitGetOwner(EventUnitProgressUnit()), true);
            }

            if ((lv_unitstring == "T4U1")) {
                gv_auratowers[UnitGetOwner(EventUnitProgressUnit())][0] = true;
            }
            else {
                if ((lv_unitstring == "T4U2")) {
                    gv_auratowers[UnitGetOwner(EventUnitProgressUnit())][1] = true;
                }
                else {
                    if ((lv_unitstring == "T5U4")) {
                        gv_auratowers[UnitGetOwner(EventUnitProgressUnit())][2] = true;
                    }

                }
            }
            SoundPlayForPlayer(lv_soundlink, UnitGetOwner(EventUnitProgressUnit()), PlayerGroupSingle(UnitGetOwner(EventUnitProgressUnit())), 500.0, 0.0);
            UnitControlGroupAddUnit(UnitGetOwner(EventUnitProgressUnit()), 6, libNtve_gf_LastReplacedUnit());
            libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Protoss, UnitGetPosition(EventUnitProgressUnit()));
            TextTagCreate((StringExternal("Param/Value/391B8221") + FixedToText((lv_tier + gv_realEXPIncrease[UnitGetOwner(EventUnitProgressUnit())]), 1) + StringExternal("Param/Value/F4C36D12")), 24, UnitGetPosition(gv_builder[UnitGetOwner(EventUnitProgressUnit())]), 1.0, true, false, PlayerGroupAll());
            UnitSetPropertyFixed(gv_builder[UnitGetOwner(EventUnitProgressUnit())], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[UnitGetOwner(EventUnitProgressUnit())], c_unitPropXP, c_unitPropCurrent) + (lv_tier + gv_realEXPIncrease[UnitGetOwner(EventUnitProgressUnit())])));
            gv_realEXP[UnitGetOwner(EventUnitProgressUnit())] += (lv_tier + gv_realEXPIncrease[UnitGetOwner(EventUnitProgressUnit())]);
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }

    }
    if (((UnitGetType(EventUnitProgressUnit()) == "SupplyDepot22") || (UnitGetType(EventUnitProgressUnit()) == "SupplyDepot2") || (UnitGetType(EventUnitProgressUnit()) == "Pear"))) {
        lv_plantCount = (TechTreeUnitCount(EventPlayer(), "SupplyDepot2", c_techCountCompleteOnly) + (TechTreeUnitCount(EventPlayer(), "SupplyDepot22", c_techCountCompleteOnly) + TechTreeUnitCount(EventPlayer(), "Pear", c_techCountCompleteOnly)));
        gv_intPlantMastery[EventPlayer()][0] += 1;
        UnitBehaviorAdd(gv_builder[EventPlayer()], "PlantmasteryC", gv_builder[EventPlayer()], 1);
        if (((gv_intPlantMastery[EventPlayer()][0] == 15) || (gv_intPlantMastery[EventPlayer()][0] == 30) || (gv_intPlantMastery[EventPlayer()][0] == 45) || (gv_intPlantMastery[EventPlayer()][0] == 60) || (gv_intPlantMastery[EventPlayer()][0] == 75) || (gv_intPlantMastery[EventPlayer()][0] == 90) || (gv_intPlantMastery[EventPlayer()][0] == 105) || (gv_intPlantMastery[EventPlayer()][0] == 120) || (gv_intPlantMastery[EventPlayer()][0] == 135) || (gv_intPlantMastery[EventPlayer()][0] == 150))) {
            gv_intPlantMastery[EventPlayer()][1] += 15;
            UnitBehaviorAdd(gv_builder[EventPlayer()], "PlantmasteryS", gv_builder[EventPlayer()], 1);
            UnitBehaviorAdd(gv_builder[EventPlayer()], "PlantmasteryN", gv_builder[EventPlayer()], 15);
            TextTagCreate((StringExternal("Param/Value/2A4BE142") + IntToText((gv_intPlantMastery[EventPlayer()][0] / 15)) + StringExternal("Param/Value/B62586F8")), 24, UnitGetPosition(EventUnit()), 1.0, true, false, PlayerGroupAll());
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            gv_intMaxCropPrices[EventPlayer()] += 5;
            gv_intTodaysCropPrices[EventPlayer()][1] += 5;
            gv_intTodaysCropPrices[EventPlayer()][2] += 5;
            gv_intTodaysCropPrices[EventPlayer()][3] += 5;
            SoundPlayForPlayer(SoundLink("UI_BnetLevelUp", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupSingle(UnitGetOwner(EventUnitProgressUnit())), 200.0, 0.0);
            if ((gv_intPlantMastery[EventPlayer()][0] == 150) && (gv_boolMissionsCompleted[EventPlayer()][4] == false)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Mission04", 1);
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/2FE80A73") + (StringToText(gv_strMissionDescription[4]) + StringExternal("Param/Value/AF82CBEC"))));
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/CA3874BA")) + (StringExternal("Param/Value/88913493") + StringExternal("Param/Value/0E2255E9"))));
                SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupSingle(UnitGetOwner(EventUnitProgressUnit())), 200.0, 0.0);
                PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 200);
                gv_boolMissionsCompleted[EventPlayer()][4] = true;
                TextTagCreate((StringExternal("Param/Value/B3937303") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/2C99FD84")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
                gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
                UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
                TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                Wait(gv_globalTexttagtimer, c_timeGame);
                TextTagDestroy(TextTagLastCreated());
            }

            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }
        else {
            if ((gv_intPlantMastery[EventPlayer()][0] >= 150)) {
            }
            else {
                TextTagCreate((StringExternal("Param/Value/8C1A706D") + (IntToText(gv_intPlantMastery[EventPlayer()][0]) + (StringExternal("Param/Value/E6247794") + IntToText(gv_intPlantMastery[EventPlayer()][1])))), 24, UnitGetPosition(EventUnit()), 1.0, true, false, PlayerGroupAll());
                TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                Wait(gv_globalTexttagtimer, c_timeGame);
                TextTagDestroy(TextTagLastCreated());
            }
        }
        if ((lv_plantCount >= 20) && (gv_boolMissionsCompleted[EventPlayer()][2] == false)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Mission02", 1);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/FADC0FBF") + (StringToText(gv_strMissionDescription[2]) + StringExternal("Param/Value/A719D13F"))));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/1E2B05ED")) + (StringExternal("Param/Value/4756ED9A") + StringExternal("Param/Value/A5861AA8"))));
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
            SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupAll(), 200.0, 0.0);
            gv_boolMissionsCompleted[EventPlayer()][2] = true;
            TextTagCreate((StringExternal("Param/Value/C90C5A16") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/80714DBF")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
            gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
            UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }

        if (((TechTreeUnitCount(EventPlayer(), "SupplyDepot2", c_techCountCompleteOnly) >= 15) || (TechTreeUnitCount(EventPlayer(), "SupplyDepot22", c_techCountCompleteOnly) >= 15) || (TechTreeUnitCount(EventPlayer(), "Pear", c_techCountCompleteOnly) >= 15)) && (gv_boolMissionsCompleted[EventPlayer()][23] == false)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Mission23", 1);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/1CDAA5E5") + (StringToText(gv_strMissionDescription[23]) + StringExternal("Param/Value/26121008"))));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/F5CEB089")) + (StringExternal("Param/Value/B7949EB6") + StringExternal("Param/Value/47640595"))));
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
            SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupAll(), 200.0, 0.0);
            gv_boolMissionsCompleted[EventPlayer()][23] = true;
        }

        if ((TechTreeUnitCount(EventPlayer(), "SupplyDepot2", c_techCountCompleteOnly) >= 3) && (TechTreeUnitCount(EventPlayer(), "Pear", c_techCountCompleteOnly) >= 3) && (TechTreeUnitCount(EventPlayer(), "SupplyDepot22", c_techCountCompleteOnly) >= 3) && (gv_boolMissionsCompleted[EventPlayer()][1] == false)) {
            SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupAll(), 200.0, 0.0);
            TechTreeUpgradeAddLevel(EventPlayer(), "Mission01", 1);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/B0F41E05") + (StringToText(gv_strMissionDescription[1]) + StringExternal("Param/Value/456B91AD"))));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/E7226A94")) + (StringExternal("Param/Value/6B226D4F") + StringExternal("Param/Value/427CC5CD"))));
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 200);
            gv_boolMissionsCompleted[EventPlayer()][1] = true;
        }

    }

    TriggerExecute(gt_updateLeaderboards, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onBuild_Init () {
    gt_onBuild = TriggerCreate("gt_onBuild_Func");
    TriggerAddEventUnitConstructProgress(gt_onBuild, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onGasBossReady
//--------------------------------------------------------------------------------------------------
bool gt_onGasBossReady_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(700, 400, c_anchorTopLeft, -43, -52, true);
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), true);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 160, 40, c_anchorTopLeft, 330, 50, StringExternal("Param/Value/E0EB5FE7"), StringExternal("Param/Value/E03CDDCE"), "");
    gv_dlgitmSellButtons[0] = DialogControlLastCreated();
    Wait(180.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/C86BAF20"));
    Wait(360.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/AD5BAE6A"));
    Wait(660.0, c_timeGame);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5CC72860"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onGasBossReady_Init () {
    gt_onGasBossReady = TriggerCreate("gt_onGasBossReady_Func");
    TriggerAddEventMapInit(gt_onGasBossReady);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onGasBossSent
//--------------------------------------------------------------------------------------------------
bool gt_onGasBossSent_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;
    int lv_originalplayer;

    // Automatic Variable Declarations
    const int auto7D7ACC00_ae = 12;
    const int auto7D7ACC00_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_originalplayer = UnitGetOwner(EventUnit());
    if (((UnitGetType(EventUnitProgressUnit()) == "lCreep41") || (UnitGetType(EventUnitProgressUnit()) == "Clreep42") || (UnitGetType(EventUnitProgressUnit()) == "pCreep43"))) {
        UnitGroupAdd(gv_unitgroupSentCreeps[lv_originalplayer], EventUnitProgressUnit());
        UnitSetPosition(EventUnitProgressUnit(), PointFromName(("Player " + (IntToString(lv_originalplayer) + " Point 1"))), false);
        UnitBehaviorAdd(EventUnitProgressUnit(), (IntToString(gv_intDifficulty[lv_originalplayer])), EventUnitProgressUnit(), 1);
        UnitSetOwner(EventUnitProgressUnit(), 13, true);
        lv_int = 1;
        for ( ; ( (auto7D7ACC00_ai >= 0 && lv_int <= auto7D7ACC00_ae) || (auto7D7ACC00_ai < 0 && lv_int >= auto7D7ACC00_ae) ) ; lv_int += auto7D7ACC00_ai ) {
            UnitIssueOrder(EventUnitProgressUnit(), OrderTargetingPoint(AbilityCommand("BattlecruiserMove", 0), PointFromName(("Player " + IntToString(lv_originalplayer) + " Point " + IntToString(lv_int)))), c_orderQueueAddToEnd);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onGasBossSent_Init () {
    gt_onGasBossSent = TriggerCreate("gt_onGasBossSent_Func");
    TriggerAddEventUnitTrainProgress(gt_onGasBossSent, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: onMissionCompleted
//--------------------------------------------------------------------------------------------------
bool gt_onMissionCompleted_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unittier;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unittier = "";

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetBehaviorCount(EventUnit(), "MoraleBooster2", EventUnit(), gv_damageincrease[EventPlayer()]);
    libNtve_gf_SetBehaviorCount(EventUnit(), "MoraleBooster22", EventUnit(), FixedToInt(gv_realLevelingStats[EventPlayer()][9]));
    libNtve_gf_SetBehaviorCount(EventUnit(), "DistractingPropaganda3222", EventUnit(), FixedToInt(gv_realLevelingStats[EventPlayer()][8]));
    if ((TechTreeUnitCount(EventPlayer(), "T1U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T1U1", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][5] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission05", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 200);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/F2195F0A") + (StringToText(gv_strMissionDescription[5]) + StringExternal("Param/Value/38DA4802"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/2E0A50E7")) + (StringExternal("Param/Value/A4250785") + StringExternal("Param/Value/C3282E0E"))));
        gv_boolMissionsCompleted[EventPlayer()][5] = true;
        TextTagCreate((StringExternal("Param/Value/F8C56691") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/C5735F6C")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if (((TechTreeUnitCount(EventPlayer(), "T1U3", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U2", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U5", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U4", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U7", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U6", c_techCountCompleteOnly) >= 6) || (TechTreeUnitCount(EventPlayer(), "T1U1", c_techCountCompleteOnly) >= 6)) && (gv_boolMissionsCompleted[EventPlayer()][6] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission06", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/9BF9760D") + (StringToText(gv_strMissionDescription[6]) + StringExternal("Param/Value/1DA0C15D"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/5FB05BF7")) + (StringExternal("Param/Value/440F0D36") + StringExternal("Param/Value/AC5BAC07"))));
        gv_boolMissionsCompleted[EventPlayer()][6] = true;
        TextTagCreate((StringExternal("Param/Value/B4D5D3B9") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/E420D50E")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if (((TechTreeUnitCount(EventPlayer(), "T2U3", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U2", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U5", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U4", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U7", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U6", c_techCountCompleteOnly) >= 5) || (TechTreeUnitCount(EventPlayer(), "T2U1", c_techCountCompleteOnly) >= 5)) && (gv_boolMissionsCompleted[EventPlayer()][7] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission07", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/A4CD63AF") + (StringToText(gv_strMissionDescription[7]) + StringExternal("Param/Value/8CA3A057"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/7471D34E")) + (StringExternal("Param/Value/ED15BB36") + StringExternal("Param/Value/0E60C826"))));
        gv_boolMissionsCompleted[EventPlayer()][7] = true;
        TextTagCreate((StringExternal("Param/Value/3E1F92CC") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/542B5080")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T3U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U1", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][8] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission08", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/FB7F3C44") + (StringToText(gv_strMissionDescription[8]) + StringExternal("Param/Value/1CE22CD7"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/E4D0833D")) + (StringExternal("Param/Value/6E51291F") + StringExternal("Param/Value/A1A10BD7"))));
        gv_boolMissionsCompleted[EventPlayer()][8] = true;
        TextTagCreate((StringExternal("Param/Value/1D26374F") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/8E258058")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if (((TechTreeUnitCount(EventPlayer(), "T3U3", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U2", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U5", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U4", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U7", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U6", c_techCountCompleteOnly) >= 4) || (TechTreeUnitCount(EventPlayer(), "T3U1", c_techCountCompleteOnly) >= 4)) && (gv_boolMissionsCompleted[EventPlayer()][9] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission09", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/DE2BF164") + (StringToText(gv_strMissionDescription[9]) + StringExternal("Param/Value/F169E807"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/D5EEE3C3")) + (StringExternal("Param/Value/88B1B15A") + StringExternal("Param/Value/4A510F4C"))));
        gv_boolMissionsCompleted[EventPlayer()][9] = true;
        TextTagCreate((StringExternal("Param/Value/FA4DD371") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/A92A0E4F")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T4U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U1", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][10] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission10", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/DC9F6C65") + (StringToText(gv_strMissionDescription[10]) + StringExternal("Param/Value/387CCC64"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/0CA34780")) + (StringExternal("Param/Value/909E6577") + StringExternal("Param/Value/8FCD787E"))));
        gv_boolMissionsCompleted[EventPlayer()][10] = true;
        TextTagCreate((StringExternal("Param/Value/C6764D9A") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/F95A426F")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U10", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U12", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U11", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][11] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission11", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/374068BC") + (StringToText(gv_strMissionDescription[11]) + StringExternal("Param/Value/F2CADE25"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/48883965")) + (StringExternal("Param/Value/152A6430") + StringExternal("Param/Value/28B9FA03"))));
        gv_boolMissionsCompleted[EventPlayer()][11] = true;
        TextTagCreate((StringExternal("Param/Value/1DAAF6D7") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/8B261B11")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U9", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U8", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U7", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][12] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission12", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/3022A528") + (StringToText(gv_strMissionDescription[12]) + StringExternal("Param/Value/F258DC7E"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/0F3D6326")) + (StringExternal("Param/Value/47F3F8E1") + StringExternal("Param/Value/6196CAFA"))));
        gv_boolMissionsCompleted[EventPlayer()][12] = true;
        TextTagCreate((StringExternal("Param/Value/E547A322") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/951C85CA")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U3", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U1", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U2", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][13] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission13", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/83E219C0") + (StringToText(gv_strMissionDescription[13]) + StringExternal("Param/Value/FA89F3A4"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/F12E8F91")) + (StringExternal("Param/Value/E6300012") + StringExternal("Param/Value/6E7E1372"))));
        gv_boolMissionsCompleted[EventPlayer()][13] = true;
        TextTagCreate((StringExternal("Param/Value/2A4DE727") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/281F36C8")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U5", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U15", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U13", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U14", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][14] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission14", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/4C104A98") + (StringToText(gv_strMissionDescription[14]) + StringExternal("Param/Value/A54D2631"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/6CF06286")) + (StringExternal("Param/Value/FF981EA7") + StringExternal("Param/Value/66717DD7"))));
        gv_boolMissionsCompleted[EventPlayer()][14] = true;
        TextTagCreate((StringExternal("Param/Value/F0B41F48") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/77A2ACDA")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U7", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U20", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U19", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U21", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][15] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission15", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/6F750BD1") + (StringToText(gv_strMissionDescription[15]) + StringExternal("Param/Value/B8321DF8"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/19C7279E")) + (StringExternal("Param/Value/6889BB89") + StringExternal("Param/Value/08A09777"))));
        gv_boolMissionsCompleted[EventPlayer()][15] = true;
        TextTagCreate((StringExternal("Param/Value/D6AB32D7") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/E0D8319F")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U17", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U16", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U18", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][16] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission16", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/AB5DDD26") + (StringToText(gv_strMissionDescription[16]) + StringExternal("Param/Value/591FB5BD"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/E05905F4")) + (StringExternal("Param/Value/62CC6E16") + StringExternal("Param/Value/B876DA2D"))));
        gv_boolMissionsCompleted[EventPlayer()][16] = true;
        TextTagCreate((StringExternal("Param/Value/5F2F98F7") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/56AA3A69")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T1U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T2U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T3U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T4U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T5U2", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U4", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U6", c_techCountCompleteOnly) >= 1) && (TechTreeUnitCount(EventPlayer(), "T6U5", c_techCountCompleteOnly) >= 1) && (gv_boolMissionsCompleted[EventPlayer()][17] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission17", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 400);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/B4375E20") + (StringToText(gv_strMissionDescription[17]) + StringExternal("Param/Value/BCDB6B5E"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/274D4AD0")) + (StringExternal("Param/Value/C7D9150F") + StringExternal("Param/Value/EFC5AD91"))));
        gv_boolMissionsCompleted[EventPlayer()][17] = true;
        TextTagCreate((StringExternal("Param/Value/6B6DAFF5") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/3E40C5FB")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((TechTreeUnitCount(EventPlayer(), "T6U6", c_techCountCompleteOnly) >= 3) && (gv_boolMissionsCompleted[EventPlayer()][18] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission18", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/2AC9A487") + (StringToText(gv_strMissionDescription[18]) + StringExternal("Param/Value/55CE182F"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/B00F23C9")) + (StringExternal("Param/Value/F3D28A4F") + StringExternal("Param/Value/548CF6F0"))));
        gv_boolMissionsCompleted[EventPlayer()][18] = true;
        TextTagCreate((StringExternal("Param/Value/691A6C8D") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/80EF3603")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((UnitGetType(EventUnit()) == "T6U8") && (gv_boolMissionsCompleted[0][19] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission19", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 100);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/7D2785C8") + (StringToText(gv_strMissionDescription[19]) + StringExternal("Param/Value/01CAD315"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/64F97B31")) + (StringExternal("Param/Value/3CC8BC2B") + StringExternal("Param/Value/BDDD8247"))));
        gv_boolMissionsCompleted[0][19] = true;
        TextTagCreate((StringExternal("Param/Value/AB408002") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/1C8A85EF")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    if ((gv_intMerges[EventPlayer()] == 35) && (gv_boolMissionsCompleted[EventPlayer()][20] == false)) {
        SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        TechTreeUpgradeAddLevel(EventPlayer(), "Mission20", 1);
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 200);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/17BB266B") + (StringToText(gv_strMissionDescription[20]) + StringExternal("Param/Value/D01D78A0"))));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/63FCED86")) + (StringExternal("Param/Value/17A6205C") + StringExternal("Param/Value/5B42D6B1"))));
        gv_boolMissionsCompleted[EventPlayer()][20] = true;
        TextTagCreate((StringExternal("Param/Value/98814AEB") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/FE133162")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
        UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
        gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }

    lv_unittier = StringSub((UnitGetType(EventUnit())), 2, 2);
    if ((lv_unittier == "6")) {
        if ((gv_boolMissionsCompleted[0][22] == false)) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/7DCF6B64") + UnitGetName(EventUnit())));
            SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
            TechTreeUpgradeAddLevel(EventPlayer(), "Mission22", 1);
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 200);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/7CCC9020") + (StringToText(gv_strMissionDescription[22]) + StringExternal("Param/Value/2BAA7194"))));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/D0EBA550")) + (StringExternal("Param/Value/4624AEFF") + StringExternal("Param/Value/91C66DF1"))));
            gv_boolMissionsCompleted[0][22] = true;
            TextTagCreate((StringExternal("Param/Value/A492B441") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/E3500D69")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
            gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
            UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }
        else {
            if ((UnitHasBehavior2(EventUnit(), "rerolled") == true)) {
            }
            else {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/C16B6A8C") + UnitGetName(EventUnit())));
            }
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_onMissionCompleted_Init () {
    gt_onMissionCompleted = TriggerCreate("gt_onMissionCompleted_Func");
    TriggerEnable(gt_onMissionCompleted, false);
    TriggerAddEventUnitRegion(gt_onMissionCompleted, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Buttons
//--------------------------------------------------------------------------------------------------
bool gt_Buttons_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_untitledVariable001;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_txtDifficultyDescription[0] = StringExternal("Param/Value/28D07EB8");
    gv_txtDifficultyDescription[1] = StringExternal("Param/Value/E738B089");
    gv_txtDifficultyDescription[2] = StringExternal("Param/Value/9A8490FB");
    gv_txtDifficultyDescription[3] = StringExternal("Param/Value/3901E2ED");
    gv_txtDifficultyDescription[4] = StringExternal("Param/Value/1636A47D");
    gv_txtDifficultyDescription[5] = StringExternal("Param/Value/4572E662");
    gv_txtDifficultyDescription[6] = StringExternal("Param/Value/29921065");
    gv_txtDifficultyDescription[7] = StringExternal("Param/Value/1FAD2F6D");
    gv_txtDifficultyDescription[8] = StringExternal("Param/Value/14F65B15");
    DialogCreate(500, 100, c_anchorCenter, 0, 0, true);
    gv_dlgDiscord = DialogLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    gv_dlgitmButtons[0][0] = DialogControlLastCreated();
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 0, 0);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 450, 50);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), "https://discord.com/invite/XHGYsEVtnQ", PlayerGroupAll());
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Buttons_Init () {
    gt_Buttons = TriggerCreate("gt_Buttons_Func");
    TriggerAddEventMapInit(gt_Buttons);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Discord button
//--------------------------------------------------------------------------------------------------
bool gt_Discordbutton_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_untitledVariable001;

    // Automatic Variable Declarations
    const int auto24BAA049_ae = 8;
    const int auto24BAA049_ai = 1;
    const int auto0C55965C_ae = 12;
    const int auto0C55965C_ai = 1;
    unitgroup auto1322932C_g;
    int auto1322932C_u;
    unit auto1322932C_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == gv_dlgitmSellButtons[0])) {
        if ((DialogIsVisible(gv_dlgDiscord, EventPlayer()) == false)) {
            libNtve_gf_SetDialogItemEditorValue(gv_dlgitmButtons[1][EventPlayer()], "https://discord.gg/XHGYsEVtnQ", PlayerGroupSingle(EventPlayer()));
            DialogSetVisible(gv_dlgDiscord, PlayerGroupSingle(EventPlayer()), true);
        }
        else {
            DialogSetVisible(gv_dlgDiscord, PlayerGroupSingle(EventPlayer()), false);
        }
    }

    if (((EventDialogControl() == gv_dlgitmSellButtons[1]) || (EventDialogControl() == gv_dlgitmSellButtons[2]) || (EventDialogControl() == gv_dlgitmSellButtons[3]))) {
        if ((EventDialogControl() == gv_dlgitmSellButtons[1])) {
            if ((gv_intCrops[EventPlayer()][1] == 0)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/E9E7F649"));
            }
            else {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/6E9D967D") + IntToText(gv_intCrops[EventPlayer()][1]) + StringExternal("Param/Value/BD5A5314") + TextWithColor(IntToText((gv_intTodaysCropPrices[EventPlayer()][1] * gv_intCrops[EventPlayer()][1])), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(3, true))) + StringExternal("Param/Value/5EE8AF05")));
                PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperAdd, (gv_intTodaysCropPrices[EventPlayer()][1] * gv_intCrops[EventPlayer()][1]));
                gv_intPlantsSoldToday[EventPlayer()] += gv_intCrops[EventPlayer()][1];
                gv_intCrops[EventPlayer()][1] = 0;
            }
        }
        else {
            if ((EventDialogControl() == gv_dlgitmSellButtons[2])) {
                if ((gv_intCrops[EventPlayer()][2] == 0)) {
                    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/A318E05B"));
                }
                else {
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/8FAF07AF") + IntToText(gv_intCrops[EventPlayer()][2]) + StringExternal("Param/Value/8BE7CBB3") + TextWithColor(IntToText((gv_intTodaysCropPrices[EventPlayer()][2] * gv_intCrops[EventPlayer()][2])), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(3, true))) + StringExternal("Param/Value/88467231")));
                    PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperAdd, (gv_intTodaysCropPrices[EventPlayer()][2] * gv_intCrops[EventPlayer()][2]));
                    gv_intPlantsSoldToday[EventPlayer()] += gv_intCrops[EventPlayer()][2];
                    gv_intCrops[EventPlayer()][2] = 0;
                }
            }
            else {
                if ((EventDialogControl() == gv_dlgitmSellButtons[3])) {
                    if ((gv_intCrops[EventPlayer()][3] == 0)) {
                        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/E464F056"));
                    }
                    else {
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/67563F6D") + IntToText(gv_intCrops[EventPlayer()][3]) + StringExternal("Param/Value/09B9139B") + TextWithColor(IntToText((gv_intTodaysCropPrices[EventPlayer()][3] * gv_intCrops[EventPlayer()][3])), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(3, true))) + StringExternal("Param/Value/3C75F707")));
                        PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperAdd, (gv_intTodaysCropPrices[EventPlayer()][3] * gv_intCrops[EventPlayer()][3]));
                        gv_intPlantsSoldToday[EventPlayer()] += gv_intCrops[EventPlayer()][3];
                        gv_intCrops[EventPlayer()][3] = 0;
                    }
                }

            }
        }
        if ((gv_intPlantsSoldToday[EventPlayer()] >= 40) && (gv_boolMissionsCompleted[EventPlayer()][26] == false)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Mission252", 1);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, (StringExternal("Param/Value/BEAB6F85") + (StringToText(gv_strMissionDescription[26]) + StringExternal("Param/Value/5C4AEF9E"))));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, ((TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/B668CEEB")) + (StringExternal("Param/Value/10D28C79") + StringExternal("Param/Value/05F65CC3"))));
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 300);
            SoundPlayForPlayer(SoundLink("UI_BNet_Achievement", -1), UnitGetOwner(EventUnitProgressUnit()), PlayerGroupAll(), 200.0, 0.0);
            gv_boolMissionsCompleted[EventPlayer()][26] = true;
            TextTagCreate((StringExternal("Param/Value/5E0E9180") + FixedToText((10.0 + gv_realEXPIncrease[EventPlayer()]), 1) + StringExternal("Param/Value/4A436952")), 24, UnitGetPosition(gv_builder[EventPlayer()]), 1.0, true, false, PlayerGroupAll());
            UnitSetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, (UnitGetPropertyFixed(gv_builder[EventPlayer()], c_unitPropXP, c_unitPropCurrent) + (10.0 + gv_realEXPIncrease[EventPlayer()])));
            gv_realEXP[EventPlayer()] += (10.0 + gv_realEXPIncrease[EventPlayer()]);
            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
            Wait(gv_globalTexttagtimer, c_timeGame);
            TextTagDestroy(TextTagLastCreated());
        }

        TriggerExecute(gt_updateLeaderboards, true, false);
    }

    lv_untitledVariable001 = 1;
    for ( ; ( (auto24BAA049_ai >= 0 && lv_untitledVariable001 <= auto24BAA049_ae) || (auto24BAA049_ai < 0 && lv_untitledVariable001 >= auto24BAA049_ae) ) ; lv_untitledVariable001 += auto24BAA049_ai ) {
        if ((EventDialogControl() == gv_dlgitmPlayerButtons[EventPlayer()][0][lv_untitledVariable001])) {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + (StringExternal("Param/Value/30A9C33B") + (gv_txtDifficultyDescription[lv_untitledVariable001] + StringExternal("Param/Value/41848C13")))));
            gv_intDifficulty[EventPlayer()] = lv_untitledVariable001;
            gv_realEXPIncrease[EventPlayer()] += (lv_untitledVariable001 / 1.5);
            BoardItemSetText(gv_ldbLeaderboards[0], 4, EventPlayer(), gv_txtDifficultyDescription[gv_intDifficulty[EventPlayer()]]);
            DialogSetVisible(gv_dlgDifficultySelection[EventPlayer()], PlayerGroupSingle(EventPlayer()), false);
            libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), (("diff" + IntToString(gv_intDifficulty[EventPlayer()]))), 1);
            UnitBehaviorAdd(gv_builder[EventPlayer()], (IntToString(gv_intDifficulty[EventPlayer()])), gv_builder[EventPlayer()], 1);
            TriggerExecute(gt_updateLeaderboards, true, false);
        }

    }
    lv_untitledVariable001 = 9;
    for ( ; ( (auto0C55965C_ai >= 0 && lv_untitledVariable001 <= auto0C55965C_ae) || (auto0C55965C_ai < 0 && lv_untitledVariable001 >= auto0C55965C_ae) ) ; lv_untitledVariable001 += auto0C55965C_ai ) {
        if ((EventDialogControl() == gv_dlgitmPlayerButtons[EventPlayer()][0][lv_untitledVariable001])) {
            if ((lv_untitledVariable001 == 12)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/14FBA837"));
                gv_intMaxCropPrices[EventPlayer()] += 15;
                gv_intTodaysCropPrices[EventPlayer()][1] += 15;
                gv_intTodaysCropPrices[EventPlayer()][2] += 15;
                gv_intTodaysCropPrices[EventPlayer()][3] += 15;
            }

            if ((lv_untitledVariable001 == 11)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/3802DBD4"));
                libNtve_gf_UnitCreateFacingPoint(1, "Drone", 0, EventPlayer(), PointFromName(("Start Location " + IntToString(EventPlayer()))), UnitGetPosition(EventUnit()));
                UnitSelect(UnitLastCreated(), EventPlayer(), true);
            }

            if ((lv_untitledVariable001 == 10)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/AA2D2E2A"));
                gv_damageincrease[EventPlayer()] += 1;
                auto1322932C_g = UnitGroup(null, EventPlayer(), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                auto1322932C_u = UnitGroupCount(auto1322932C_g, c_unitCountAll);
                for (;; auto1322932C_u -= 1) {
                    auto1322932C_var = UnitGroupUnitFromEnd(auto1322932C_g, auto1322932C_u);
                    if (auto1322932C_var == null) { break; }
                    libNtve_gf_SetBehaviorCount(auto1322932C_var, "MoraleBooster2", auto1322932C_var, gv_damageincrease[EventPlayer()]);
                }
            }

            if ((lv_untitledVariable001 == 9)) {
                UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/3C6D2B64"));
                PlayerAddChargeUsed(EventPlayer(), "redo", -3.0);
                libNtve_gf_UnitCreateFacingPoint(1, "Drone", 0, EventPlayer(), PointFromName(("Start Location " + IntToString(EventPlayer()))), UnitGetPosition(EventUnit()));
            }

            DialogSetVisible(gv_dlgRewardSelection[EventPlayer()], PlayerGroupSingle(EventPlayer()), false);
            TriggerExecute(gt_updateLeaderboards, true, false);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Discordbutton_Init () {
    gt_Discordbutton = TriggerCreate("gt_Discordbutton_Func");
    TriggerAddEventDialogControl(gt_Discordbutton, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Item Auras
//--------------------------------------------------------------------------------------------------
bool gt_ItemAuras_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitInventoryItem()) == "Item11")) {
        gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][3] = true;
    }
    else {
        if ((UnitGetType(EventUnitInventoryItem()) == "Item2")) {
            gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][5] = true;
        }
        else {
            if ((UnitGetType(EventUnitInventoryItem()) == "Item4")) {
                gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][6] = true;
            }
            else {
                if ((UnitGetType(EventUnitInventoryItem()) == "Item9")) {
                    gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][4] = true;
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ItemAuras_Init () {
    gt_ItemAuras = TriggerCreate("gt_ItemAuras_Func");
    TriggerAddEventUnitInventoryChange(gt_ItemAuras, null, c_unitInventoryChangePicksUp, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Item Auras off
//--------------------------------------------------------------------------------------------------
bool gt_ItemAurasoff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnitInventoryItem()) == "Item11")) {
        gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][3] = false;
    }
    else {
        if ((UnitGetType(EventUnitInventoryItem()) == "Item2")) {
            gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][5] = false;
        }
        else {
            if ((UnitGetType(EventUnitInventoryItem()) == "Item4")) {
                gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][6] = false;
            }
            else {
                if ((UnitGetType(EventUnitInventoryItem()) == "Item9")) {
                    gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][4] = false;
                }
                else {
                    if ((UnitGetType(EventUnitInventoryItem()) == "Item16")) {
                        gv_auratowers[UnitGetOwner(EventUnitInventoryItem())][4] = false;
                    }

                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ItemAurasoff_Init () {
    gt_ItemAurasoff = TriggerCreate("gt_ItemAurasoff_Func");
    TriggerAddEventUnitInventoryChange(gt_ItemAurasoff, null, c_unitInventoryChangeDrops, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Item Effects
//--------------------------------------------------------------------------------------------------
bool gt_ItemEffects_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    int lv_untitledVariable001;

    // Automatic Variable Declarations
    unitgroup autoB3FE73D4_g;
    int autoB3FE73D4_u;
    unit autoB3FE73D4_var;
    const int auto93CA3B61_ae = 12;
    const int auto93CA3B61_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item17") == true)) {
        UnitBehaviorAdd(EventUnit(), "AcidicRediance", EventUnitDamageSourceUnit(), 1);
    }
    else {
        if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item1") == true)) {
            if ((RandomInt(0, 100) <= 10)) {
                lv_damage = (EventUnitDamageAmount() * 1.75);
                UnitDamage(EventUnitDamageSourceUnit(), "HydraliskNeedleSpinesStetmannDamage2", EventUnit(), lv_damage);
                TextTagCreate(StringExternal("Param/Value/8D720B61"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                Wait(gv_globalTexttagtimer, c_timeGame);
                TextTagDestroy(TextTagLastCreated());
            }

        }
        else {
            if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item5") == true)) {
                if ((RandomInt(0, 100) <= 7)) {
                    lv_damage = 1500.0;
                    UnitDamage(EventUnitDamageSourceUnit(), "HydraliskNeedleSpinesStetmannDamage2", EventUnit(), lv_damage);
                    TextTagCreate(StringExternal("Param/Value/C88D5CE3"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                    Wait(gv_globalTexttagtimer, c_timeGame);
                    TextTagDestroy(TextTagLastCreated());
                }

            }
            else {
                if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item6") == true)) {
                    if ((RandomInt(0, 100) <= 7)) {
                        UnitBehaviorAdd(EventUnit(), "PANIC", EventUnitDamageSourceUnit(), 1);
                        TextTagCreate(StringExternal("Param/Value/893A3167"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                        Wait(gv_globalTexttagtimer, c_timeGame);
                        TextTagDestroy(TextTagLastCreated());
                    }

                }
                else {
                    if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item7") == true)) {
                        if ((RandomInt(0, 100) <= 7)) {
                            libNtve_gf_UnitCreateFacingPoint(1, "ZerglingMengsk", 0, UnitGetOwner(EventUnitDamageSourceUnit()), UnitGetPosition(EventUnit()), UnitGetPosition(EventUnit()));
                            TextTagCreate(StringExternal("Param/Value/A4D65443"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                            Wait(gv_globalTexttagtimer, c_timeGame);
                            TextTagDestroy(TextTagLastCreated());
                        }

                    }
                    else {
                        if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item8") == true)) {
                            if ((RandomInt(0, 100) <= 5)) {
                                lv_damage = (EventUnitDamageAmount() * 3.0);
                                UnitDamage(EventUnitDamageSourceUnit(), "HydraliskNeedleSpinesStetmannDamage2", EventUnit(), lv_damage);
                                TextTagCreate(StringExternal("Param/Value/77B5FE44"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                                Wait(gv_globalTexttagtimer, c_timeGame);
                                TextTagDestroy(TextTagLastCreated());
                            }

                        }
                        else {
                            if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item12") == true)) {
                                if ((RandomInt(0, 100) <= 15)) {
                                    UnitIssueOrder(EventUnitDamageSourceUnit(), OrderTargetingPoint(AbilityCommand("PsiStormArchon", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
                                    TextTagCreate(StringExternal("Param/Value/E5EFE2EC"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                                    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                                    Wait(gv_globalTexttagtimer, c_timeGame);
                                    TextTagDestroy(TextTagLastCreated());
                                }

                            }
                            else {
                                if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item14") == true)) {
                                    if ((RandomInt(0, 100) <= 5)) {
                                        lv_untitledVariable001 = 1;
                                        for ( ; ( (auto93CA3B61_ai >= 0 && lv_untitledVariable001 <= auto93CA3B61_ae) || (auto93CA3B61_ai < 0 && lv_untitledVariable001 >= auto93CA3B61_ae) ) ; lv_untitledVariable001 += auto93CA3B61_ai ) {
                                            if ((gv_intLives[lv_untitledVariable001] > 0) && (lv_untitledVariable001 != UnitGetOwner(EventUnitDamageSourceUnit())) && (PlayerStatus(lv_untitledVariable001) == c_playerStatusActive)) {
                                                PlayerModifyPropertyInt(UnitGetOwner(EventUnitDamageSourceUnit()), c_playerPropMinerals, c_playerPropOperAdd, 5);
                                                PlayerModifyPropertyInt(lv_untitledVariable001, c_playerPropMinerals, c_playerPropOperSubtract, 5);
                                            }

                                        }
                                        TextTagCreate(StringExternal("Param/Value/6E69CEE0"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                                        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                                        Wait(gv_globalTexttagtimer, c_timeGame);
                                        TextTagDestroy(TextTagLastCreated());
                                    }

                                }
                                else {
                                    if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item15") == true)) {
                                        if ((RandomInt(0, 100) <= 5)) {
                                            autoB3FE73D4_g = UnitGroup(null, UnitGetOwner(EventUnitDamageSourceUnit()), RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                                            autoB3FE73D4_u = UnitGroupCount(autoB3FE73D4_g, c_unitCountAll);
                                            for (;; autoB3FE73D4_u -= 1) {
                                                autoB3FE73D4_var = UnitGroupUnitFromEnd(autoB3FE73D4_g, autoB3FE73D4_u);
                                                if (autoB3FE73D4_var == null) { break; }
                                                UnitBehaviorAdd(autoB3FE73D4_var, "WeakspotCallouted", EventUnitDamageSourceUnit(), 1);
                                            }
                                            TextTagCreate(StringExternal("Param/Value/9591D960"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                            TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                                            TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                                            Wait(gv_globalTexttagtimer, c_timeGame);
                                            TextTagDestroy(TextTagLastCreated());
                                        }

                                    }
                                    else {
                                        if ((UnitHasBehavior2(EventUnitDamageSourceUnit(), "item16") == true)) {
                                            if ((RandomInt(0, 100) <= 20)) {
                                                if ((RandomInt(0, 100) <= 50)) {
                                                    TextTagCreate(StringExternal("Param/Value/0C497204"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                                    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "UnstableStimpack", EventUnitDamageSourceUnit(), 1);
                                                    UnitBehaviorRemove(EventUnitDamageSourceUnit(), "UnstableStimpack2", 1);
                                                }
                                                else {
                                                    TextTagCreate(StringExternal("Param/Value/9E453447"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
                                                    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "UnstableStimpack2", EventUnitDamageSourceUnit(), 1);
                                                    UnitBehaviorRemove(EventUnitDamageSourceUnit(), "UnstableStimpack", 1);
                                                }
                                                TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
                                                TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
                                                Wait(gv_globalTexttagtimer, c_timeGame);
                                                TextTagDestroy(TextTagLastCreated());
                                            }

                                        }

                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ItemEffects_Init () {
    gt_ItemEffects = TriggerCreate("gt_ItemEffects_Func");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "WarpBlades");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "SOAMothershipv4BeamDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "AlarakBaneBladesDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "HHLaserBatteryU");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "OdinDamageLeft");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "BacklashRocketsU");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "TychusCoopChaingunDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "DuskWingBansheeDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "NovaWeaponImprovedCanisterRifleCloaked");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "ZagaraVoidCoopRangedDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "RazorTalonsDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "PrimalZergling");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "VoidSeekerU");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "DragoonDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "DarkTemplarChampionDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "GaryStetmannDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "UltraliskKaiserBladesDamageStetmann");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "HotSRaptorClawsDamage");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "HunterKillerU");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "YetiMatriarchClaws");
    TriggerAddEventUnitDamaged(gt_ItemEffects, null, c_unitDamageTypeAny, c_unitDamageEither, "MutatorTurkeyPeckDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Every 1 sec
//--------------------------------------------------------------------------------------------------
bool gt_Every1sec_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_untitledVariable001;
    fixed lv_damage;

    // Automatic Variable Declarations
    const int auto7F5A6C8B_ae = 12;
    const int auto7F5A6C8B_ai = 1;
    unitgroup autoB4BEE9E2_g;
    int autoB4BEE9E2_u;
    unit autoB4BEE9E2_var;
    unitgroup auto07AFAECA_g;
    int auto07AFAECA_u;
    unit auto07AFAECA_var;
    unitgroup auto562F6371_g;
    int auto562F6371_u;
    unit auto562F6371_var;
    unitgroup auto7F05D74A_g;
    int auto7F05D74A_u;
    unit auto7F05D74A_var;
    unitgroup auto9630A490_g;
    int auto9630A490_u;
    unit auto9630A490_var;
    unitgroup autoF93118A0_g;
    int autoF93118A0_u;
    unit autoF93118A0_var;
    unitgroup auto93EA4A98_g;
    int auto93EA4A98_u;
    unit auto93EA4A98_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_untitledVariable001 = 1;
    for ( ; ( (auto7F5A6C8B_ai >= 0 && lv_untitledVariable001 <= auto7F5A6C8B_ae) || (auto7F5A6C8B_ai < 0 && lv_untitledVariable001 >= auto7F5A6C8B_ae) ) ; lv_untitledVariable001 += auto7F5A6C8B_ai ) {
        if ((PlayerStatus(lv_untitledVariable001) == c_playerStatusActive)) {
            if ((gv_auratowers[lv_untitledVariable001][0] == true)) {
                autoB4BEE9E2_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                autoB4BEE9E2_u = UnitGroupCount(autoB4BEE9E2_g, c_unitCountAll);
                for (;; autoB4BEE9E2_u -= 1) {
                    autoB4BEE9E2_var = UnitGroupUnitFromEnd(autoB4BEE9E2_g, autoB4BEE9E2_u);
                    if (autoB4BEE9E2_var == null) { break; }
                    UnitBehaviorAdd(autoB4BEE9E2_var, "FreshCreep", autoB4BEE9E2_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][2] == true)) {
                auto07AFAECA_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                auto07AFAECA_u = UnitGroupCount(auto07AFAECA_g, c_unitCountAll);
                for (;; auto07AFAECA_u -= 1) {
                    auto07AFAECA_var = UnitGroupUnitFromEnd(auto07AFAECA_g, auto07AFAECA_u);
                    if (auto07AFAECA_var == null) { break; }
                    UnitBehaviorAdd(auto07AFAECA_var, "PsionicWill", auto07AFAECA_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][4] == true)) {
                auto562F6371_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                auto562F6371_u = UnitGroupCount(auto562F6371_g, c_unitCountAll);
                for (;; auto562F6371_u -= 1) {
                    auto562F6371_var = UnitGroupUnitFromEnd(auto562F6371_g, auto562F6371_u);
                    if (auto562F6371_var == null) { break; }
                    UnitBehaviorAdd(auto562F6371_var, "HivemindTraining", auto562F6371_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][5] == true)) {
                auto7F05D74A_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                auto7F05D74A_u = UnitGroupCount(auto7F05D74A_g, c_unitCountAll);
                for (;; auto7F05D74A_u -= 1) {
                    auto7F05D74A_var = UnitGroupUnitFromEnd(auto7F05D74A_g, auto7F05D74A_u);
                    if (auto7F05D74A_var == null) { break; }
                    UnitBehaviorAdd(auto7F05D74A_var, "MoraleBooster", auto7F05D74A_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][1] == true)) {
                auto9630A490_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                auto9630A490_u = UnitGroupCount(auto9630A490_g, c_unitCountAll);
                for (;; auto9630A490_u -= 1) {
                    auto9630A490_var = UnitGroupUnitFromEnd(auto9630A490_g, auto9630A490_u);
                    if (auto9630A490_var == null) { break; }
                    UnitBehaviorAdd(auto9630A490_var, "DistractingPropaganda", auto9630A490_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][6] == true)) {
                autoF93118A0_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                autoF93118A0_u = UnitGroupCount(autoF93118A0_g, c_unitCountAll);
                for (;; autoF93118A0_u -= 1) {
                    autoF93118A0_var = UnitGroupUnitFromEnd(autoF93118A0_g, autoF93118A0_u);
                    if (autoF93118A0_var == null) { break; }
                    UnitBehaviorAdd(autoF93118A0_var, "PsionicEmitter", autoF93118A0_var, 1);
                }
            }

            if ((gv_auratowers[lv_untitledVariable001][3] == true) && (RandomInt(0, 100) <= 5)) {
                lv_damage = 700.0;
                auto93EA4A98_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                auto93EA4A98_u = UnitGroupCount(auto93EA4A98_g, c_unitCountAll);
                for (;; auto93EA4A98_u -= 1) {
                    auto93EA4A98_var = UnitGroupUnitFromEnd(auto93EA4A98_g, auto93EA4A98_u);
                    if (auto93EA4A98_var == null) { break; }
                    UnitDamage(auto93EA4A98_var, "Wrath", auto93EA4A98_var, lv_damage);
                }
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Every1sec_Init () {
    gt_Every1sec = TriggerCreate("gt_Every1sec_Func");
    TriggerAddEventTimePeriodic(gt_Every1sec, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Check auras
//--------------------------------------------------------------------------------------------------
bool gt_Checkauras_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_untitledVariable001;
    fixed lv_damage;

    // Automatic Variable Declarations
    const int auto7F594563_ae = 12;
    const int auto7F594563_ai = 1;
    unitgroup autoD5E03955_g;
    int autoD5E03955_u;
    unit autoD5E03955_var;
    unitgroup auto764B08EF_g;
    int auto764B08EF_u;
    unit auto764B08EF_var;
    unitgroup autoF517B725_g;
    int autoF517B725_u;
    unit autoF517B725_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_untitledVariable001 = 1;
    for ( ; ( (auto7F594563_ai >= 0 && lv_untitledVariable001 <= auto7F594563_ae) || (auto7F594563_ai < 0 && lv_untitledVariable001 >= auto7F594563_ae) ) ; lv_untitledVariable001 += auto7F594563_ai ) {
        if ((PlayerStatus(lv_untitledVariable001) == c_playerStatusActive)) {
            if ((TechTreeUnitCount(lv_untitledVariable001, "T4U1", c_techCountCompleteOnly) >= 1)) {
                gv_auratowers[lv_untitledVariable001][0] = true;
                autoD5E03955_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                autoD5E03955_u = UnitGroupCount(autoD5E03955_g, c_unitCountAll);
                for (;; autoD5E03955_u -= 1) {
                    autoD5E03955_var = UnitGroupUnitFromEnd(autoD5E03955_g, autoD5E03955_u);
                    if (autoD5E03955_var == null) { break; }
                    UnitBehaviorAdd(autoD5E03955_var, "FreshCreep", autoD5E03955_var, 1);
                }
            }
            else {
                gv_auratowers[lv_untitledVariable001][0] = false;
            }
            if ((TechTreeUnitCount(lv_untitledVariable001, "T5U4", c_techCountCompleteOnly) >= 1)) {
                gv_auratowers[lv_untitledVariable001][2] = true;
                auto764B08EF_g = UnitGroup(null, lv_untitledVariable001, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
                auto764B08EF_u = UnitGroupCount(auto764B08EF_g, c_unitCountAll);
                for (;; auto764B08EF_u -= 1) {
                    auto764B08EF_var = UnitGroupUnitFromEnd(auto764B08EF_g, auto764B08EF_u);
                    if (auto764B08EF_var == null) { break; }
                    UnitBehaviorAdd(auto764B08EF_var, "PsionicWill", auto764B08EF_var, 1);
                }
            }
            else {
                gv_auratowers[lv_untitledVariable001][2] = false;
            }
            if ((TechTreeUnitCount(lv_untitledVariable001, "T4U2", c_techCountCompleteOnly) >= 1)) {
                gv_auratowers[lv_untitledVariable001][1] = true;
                autoF517B725_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(lv_untitledVariable001))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
                autoF517B725_u = UnitGroupCount(autoF517B725_g, c_unitCountAll);
                for (;; autoF517B725_u -= 1) {
                    autoF517B725_var = UnitGroupUnitFromEnd(autoF517B725_g, autoF517B725_u);
                    if (autoF517B725_var == null) { break; }
                    UnitBehaviorAdd(autoF517B725_var, "DistractingPropaganda", autoF517B725_var, 1);
                }
            }
            else {
                gv_auratowers[lv_untitledVariable001][1] = false;
            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Checkauras_Init () {
    gt_Checkauras = TriggerCreate("gt_Checkauras_Func");
    TriggerAddEventTimePeriodic(gt_Checkauras, 15.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Scantipede
//--------------------------------------------------------------------------------------------------
bool gt_Scantipede_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    unitgroup auto2A65860A_g;
    int auto2A65860A_u;
    unit auto2A65860A_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2A65860A_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto2A65860A_u = UnitGroupCount(auto2A65860A_g, c_unitCountAll);
    for (;; auto2A65860A_u -= 1) {
        auto2A65860A_var = UnitGroupUnitFromEnd(auto2A65860A_g, auto2A65860A_u);
        if (auto2A65860A_var == null) { break; }
        UnitBehaviorAdd(auto2A65860A_var, "LightningBomb", EventUnitDamageSourceUnit(), 1);
    }
    TextTagCreate(StringExternal("Param/Value/F70B43C2"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "C5", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Scantipede_Init () {
    gt_Scantipede = TriggerCreate("gt_Scantipede_Func");
    TriggerAddEventUnitDamaged(gt_Scantipede, null, c_unitDamageTypeAny, c_unitDamageEither, "ScantipedeParasiticSmallDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Urubu
//--------------------------------------------------------------------------------------------------
bool gt_Urubu_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    unitgroup auto1E996063_g;
    int auto1E996063_u;
    unit auto1E996063_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = EventUnitDamageAmount();
    lv_damage /= 100.0;
    lv_damage *= 40.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    auto1E996063_g = UnitGroupSearch(null, 13, UnitGetPosition(EventUnit()), 8.0, UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 7);
    auto1E996063_u = UnitGroupCount(auto1E996063_g, c_unitCountAll);
    for (;; auto1E996063_u -= 1) {
        auto1E996063_var = UnitGroupUnitFromEnd(auto1E996063_g, auto1E996063_u);
        if (auto1E996063_var == null) { break; }
        UnitDamage(EventUnitDamageSourceUnit(), "Wrath", auto1E996063_var, lv_damage);
    }
    TextTagCreate(StringExternal("Param/Value/49022C85"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "C8", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Urubu_Init () {
    gt_Urubu = TriggerCreate("gt_Urubu_Func");
    TriggerAddEventUnitDamaged(gt_Urubu, null, c_unitDamageTypeAny, c_unitDamageEither, "MutatorTurkeyPeckDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ursadon
//--------------------------------------------------------------------------------------------------
bool gt_Ursadon_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    unitgroup autoEE6A5E1A_g;
    int autoEE6A5E1A_u;
    unit autoEE6A5E1A_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = 800.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    autoEE6A5E1A_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoEE6A5E1A_u = UnitGroupCount(autoEE6A5E1A_g, c_unitCountAll);
    for (;; autoEE6A5E1A_u -= 1) {
        autoEE6A5E1A_var = UnitGroupUnitFromEnd(autoEE6A5E1A_g, autoEE6A5E1A_u);
        if (autoEE6A5E1A_var == null) { break; }
        UnitDamage(EventUnitDamageSourceUnit(), "ursadon", autoEE6A5E1A_var, lv_damage);
    }
    TextTagCreate(StringExternal("Param/Value/876D8AB8"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "C7", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Ursadon_Init () {
    gt_Ursadon = TriggerCreate("gt_Ursadon_Func");
    TriggerAddEventUnitDamaged(gt_Ursadon, null, c_unitDamageTypeAny, c_unitDamageEither, "YetiMatriarchClaws");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tastelope
//--------------------------------------------------------------------------------------------------
bool gt_Tastelope_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 25))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "SlowSpines", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/85D7D118"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "C6", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tastelope_Init () {
    gt_Tastelope = TriggerCreate("gt_Tastelope_Func");
    TriggerAddEventUnitDamaged(gt_Tastelope, null, c_unitDamageTypeAny, c_unitDamageEither, "HunterKillerU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mecha Hydralisk
//--------------------------------------------------------------------------------------------------
bool gt_MechaHydralisk_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = (EventUnitDamageAmount() * 2.0);
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitDamage(EventUnitDamageSourceUnit(), "HydraliskNeedleSpinesStetmannDamage2", EventUnit(), lv_damage);
    TextTagCreate(StringExternal("Param/Value/9C270010"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "M4", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Terran, UnitGetPosition(EventUnit()));
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MechaHydralisk_Init () {
    gt_MechaHydralisk = TriggerCreate("gt_MechaHydralisk_Func");
    TriggerAddEventUnitDamaged(gt_MechaHydralisk, null, c_unitDamageTypeAny, c_unitDamageEither, "HydraliskNeedleSpinesStetmannDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Evo champer
//--------------------------------------------------------------------------------------------------
bool gt_Evochamper_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 2))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "lCreep41"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Clreep42"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "pCreep43"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "KerriganEpilogue03"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep60"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep50"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep40"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep30"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep20"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep10"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(EventUnit());
    libNtve_gf_UnitCreateFacingPoint(1, "mizmodel", 0, 0, UnitGetPosition(EventUnit()), UnitGetPosition(EventUnit()));
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "M7", EventUnitDamageSourceUnit(), 1);
    Wait(0.1, c_timeGame);
    UnitKill(UnitLastCreated());
    PlayerModifyPropertyInt(UnitGetOwner(EventUnitDamageSourceUnit()), c_playerPropMinerals, c_playerPropOperAdd, 200);
    TextTagCreate(StringExternal("Param/Value/446ED552"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Evochamper_Init () {
    gt_Evochamper = TriggerCreate("gt_Evochamper_Func");
    TriggerAddEventUnitDamaged(gt_Evochamper, null, c_unitDamageTypeAny, c_unitDamageEither, "HotSRaptorClawsDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mecha Ultralisk
//--------------------------------------------------------------------------------------------------
bool gt_MechaUltralisk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 13))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "ElectromagticSurge", EventUnitDamageSourceUnit(), 1);
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "M8", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/90FCD979"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MechaUltralisk_Init () {
    gt_MechaUltralisk = TriggerCreate("gt_MechaUltralisk_Func");
    TriggerAddEventUnitDamaged(gt_MechaUltralisk, null, c_unitDamageTypeAny, c_unitDamageEither, "UltraliskKaiserBladesDamageStetmann");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Gary
//--------------------------------------------------------------------------------------------------
bool gt_Gary_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    unitgroup auto493853E7_g;
    int auto493853E7_u;
    unit auto493853E7_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto493853E7_g = UnitGroup(null, UnitGetOwner(EventUnitDamageSourceUnit()), RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0);
    auto493853E7_u = UnitGroupCount(auto493853E7_g, c_unitCountAll);
    for (;; auto493853E7_u -= 1) {
        auto493853E7_var = UnitGroupUnitFromEnd(auto493853E7_g, auto493853E7_u);
        if (auto493853E7_var == null) { break; }
        UnitBehaviorAdd(auto493853E7_var, "TheBestOil", EventUnitDamageSourceUnit(), 1);
    }
    TextTagCreate(StringExternal("Param/Value/882DB8ED"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "M6", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Gary_Init () {
    gt_Gary = TriggerCreate("gt_Gary_Func");
    TriggerAddEventUnitDamaged(gt_Gary, null, c_unitDamageTypeAny, c_unitDamageEither, "GaryStetmannDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: High Templar
//--------------------------------------------------------------------------------------------------
bool gt_HighTemplar_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "DistractingPropaganda2", EventUnitDamageSourceUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HighTemplar_Init () {
    gt_HighTemplar = TriggerCreate("gt_HighTemplar_Func");
    TriggerAddEventUnitDamaged(gt_HighTemplar, null, c_unitDamageTypeAny, c_unitDamageEither, "HighTemplarWeaponDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Vorazun
//--------------------------------------------------------------------------------------------------
bool gt_Vorazun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitTarget(), "ShadowFury") == true)) {
    }
    else {
        UnitBehaviorAdd(EventUnitTarget(), "ShadowFury", EventUnitTarget(), 1);
        UnitBehaviorAdd(EventUnitTarget(), "P6", EventUnitTarget(), 1);
        TextTagCreate(StringExternal("Param/Value/01962E0E"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Vorazun_Init () {
    gt_Vorazun = TriggerCreate("gt_Vorazun_Func");
    TriggerAddEventUnitAttacked2(gt_Vorazun, null, "DarkTemplarChampionWeapon");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Warp gate
//--------------------------------------------------------------------------------------------------
bool gt_Warpgate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    const int auto9526A05E_ae = 12;
    const int auto9526A05E_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 2))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "KerriganEpilogue03"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep60"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep50"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep40"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep30"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep20"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep10"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "lCreep41"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Clreep42"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "pCreep43"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), PointFromName(("Player " + (IntToString(UnitGetOwner(EventUnitDamageSourceUnit())) + " Point 1"))), false);
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "P8", EventUnitDamageSourceUnit(), 1);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + (IntToString(UnitGetOwner(EventUnitDamageSourceUnit())) + " Point 1")))), c_orderQueueReplace);
    lv_int = 1;
    for ( ; ( (auto9526A05E_ai >= 0 && lv_int <= auto9526A05E_ae) || (auto9526A05E_ai < 0 && lv_int >= auto9526A05E_ae) ) ; lv_int += auto9526A05E_ai ) {
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromName(("Player " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())) + " Point " + IntToString(lv_int)))), c_orderQueueAddToEnd);
    }
    TextTagCreate(StringExternal("Param/Value/06CF88A9"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Warpgate_Init () {
    gt_Warpgate = TriggerCreate("gt_Warpgate_Func");
    TriggerAddEventUnitDamaged(gt_Warpgate, null, c_unitDamageTypeAny, c_unitDamageEither, "DragoonDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Void Seeker
//--------------------------------------------------------------------------------------------------
bool gt_VoidSeeker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = 300.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "P7", EventUnitDamageSourceUnit(), 1);
    UnitDamage(EventUnitDamageSourceUnit(), "voidseeker", EventUnit(), lv_damage);
    if (((UnitGetType(EventUnit()) != "KerriganEpilogue03") || (UnitGetType(EventUnit()) != "Creep60") || (UnitGetType(EventUnit()) != "Creep50") || (UnitGetType(EventUnit()) != "Creep40") || (UnitGetType(EventUnit()) != "Creep30") || (UnitGetType(EventUnit()) != "Creep20") || (UnitGetType(EventUnit()) != "Creep10") || (UnitGetType(EventUnit()) != "lCreep41") || (UnitGetType(EventUnit()) != "Clreep42") || (UnitGetType(EventUnit()) != "pCreep43"))) {
        UnitBehaviorAdd(EventUnit(), "VoidEnsnare2", EventUnitDamageSourceUnit(), 1);
    }
    else {
        UnitBehaviorAdd(EventUnit(), "VoidEnsnare", EventUnitDamageSourceUnit(), 1);
    }
    TextTagCreate(StringExternal("Param/Value/97F992C8"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VoidSeeker_Init () {
    gt_VoidSeeker = TriggerCreate("gt_VoidSeeker_Func");
    TriggerAddEventUnitDamaged(gt_VoidSeeker, null, c_unitDamageTypeAny, c_unitDamageEither, "VoidSeekerU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk
//--------------------------------------------------------------------------------------------------
bool gt_Ultralisk_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_untitledVariable001;
    int lv_tries;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 20))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_untitledVariable001 = UnitGroupRandomUnit(UnitGroup(null, UnitGetOwner(EventUnitDamageSourceUnit()), RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0), c_unitCountAlive);
    while ((lv_untitledVariable001 == EventUnitDamageSourceUnit())) {
        lv_untitledVariable001 = UnitGroupRandomUnit(UnitGroup(null, UnitGetOwner(EventUnitDamageSourceUnit()), RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, 0, (1 << c_targetFilterPsionic) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterSummoned - 32))), 0), c_unitCountAlive);
        lv_tries += 1;
        if ((lv_tries == 10)) {
            break;
        }

    }
    if ((lv_tries == 20)) {
    }
    else {
        UnitBehaviorAdd(lv_untitledVariable001, "OvermindTactics", EventUnitDamageSourceUnit(), 1);
        UnitBehaviorAdd(lv_untitledVariable001, "HydraliskFrenzy", EventUnitDamageSourceUnit(), 1);
        UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Z5", EventUnitDamageSourceUnit(), 1);
        TextTagCreate(StringExternal("Param/Value/35686A8C"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Ultralisk_Init () {
    gt_Ultralisk = TriggerCreate("gt_Ultralisk_Func");
    TriggerAddEventUnitDamaged(gt_Ultralisk, null, c_unitDamageTypeAny, c_unitDamageEither, "HotSUltraliskKaiserBladesDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Carbot zergling
//--------------------------------------------------------------------------------------------------
bool gt_Carbotzergling_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    unitgroup auto80F3A3A8_g;
    int auto80F3A3A8_u;
    unit auto80F3A3A8_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = 750.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    auto80F3A3A8_g = UnitGroupSearch(null, 13, UnitGetPosition(EventUnit()), 3.0, UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto80F3A3A8_u = UnitGroupCount(auto80F3A3A8_g, c_unitCountAll);
    for (;; auto80F3A3A8_u -= 1) {
        auto80F3A3A8_var = UnitGroupUnitFromEnd(auto80F3A3A8_g, auto80F3A3A8_u);
        if (auto80F3A3A8_var == null) { break; }
        UnitDamage(EventUnitDamageSourceUnit(), "Carbot", auto80F3A3A8_var, lv_damage);
    }
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Zerg, UnitGetPosition(EventUnit()));
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Z7", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/85E6A7F1"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Carbotzergling_Init () {
    gt_Carbotzergling = TriggerCreate("gt_Carbotzergling_Func");
    TriggerAddEventUnitDamaged(gt_Carbotzergling, null, c_unitDamageTypeAny, c_unitDamageEither, "PrimalZergling");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Kerrigan
//--------------------------------------------------------------------------------------------------
bool gt_Kerrigan_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = (EventUnitDamageAmount() * 5.0);
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Z8", EventUnitDamageSourceUnit(), 1);
    UnitDamage(EventUnitDamageSourceUnit(), "HydraliskNeedleSpinesStetmannDamage2", EventUnit(), lv_damage);
    TextTagCreate(StringExternal("Param/Value/4B79888E"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Zerg, UnitGetPosition(EventUnit()));
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Kerrigan_Init () {
    gt_Kerrigan = TriggerCreate("gt_Kerrigan_Func");
    TriggerAddEventUnitDamaged(gt_Kerrigan, null, c_unitDamageTypeAny, c_unitDamageEither, "RazorTalonsDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zagara
//--------------------------------------------------------------------------------------------------
bool gt_Zagara_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 35))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(UnitGetOwner(EventUnitDamageSourceUnit()), c_playerPropMinerals, c_playerPropOperAdd, 8);
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Z6", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/C9096F2F"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Zagara_Init () {
    gt_Zagara = TriggerCreate("gt_Zagara_Func");
    TriggerAddEventUnitDamaged(gt_Zagara, null, c_unitDamageTypeAny, c_unitDamageEither, "ZagaraVoidCoopRangedDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege tank
//--------------------------------------------------------------------------------------------------
bool gt_Siegetank_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 18))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnitTarget(), "ArtilleryStabilizer", EventUnitTarget(), 1);
    UnitBehaviorAdd(EventUnitTarget(), "T5", EventUnitTarget(), 1);
    TextTagCreate(StringExternal("Param/Value/BE092106"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Siegetank_Init () {
    gt_Siegetank = TriggerCreate("gt_Siegetank_Func");
    TriggerAddEventUnitAttacked2(gt_Siegetank, null, "CrucioShockCannon");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Nova
//--------------------------------------------------------------------------------------------------
bool gt_Nova_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_int;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnitDamageSourceUnit(), OrderTargetingPoint(AbilityCommand("NovaWeaponHellfireShotgunBlast", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "T7", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/9CE8EDF8"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Nova_Init () {
    gt_Nova = TriggerCreate("gt_Nova_Func");
    TriggerAddEventUnitDamaged(gt_Nova, null, c_unitDamageTypeAny, c_unitDamageEither, "NovaWeaponImprovedCanisterRifleCloaked");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dusk wing
//--------------------------------------------------------------------------------------------------
bool gt_Duskwing_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitTarget(), "MoreRockets") == true)) {
    }
    else {
        UnitBehaviorAdd(EventUnitTarget(), "MoreRockets", EventUnitTarget(), 1);
        TextTagCreate(StringExternal("Param/Value/46BFEC34"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        UnitBehaviorAdd(EventUnitTarget(), "T6", EventUnitTarget(), 1);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Duskwing_Init () {
    gt_Duskwing = TriggerCreate("gt_Duskwing_Func");
    TriggerAddEventUnitAttacked2(gt_Duskwing, null, "DuskWingBanshee");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tychus
//--------------------------------------------------------------------------------------------------
bool gt_Tychus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "ArmorPenetratingRounds", EventUnitDamageSourceUnit(), 1);
    TextTagCreate(StringExternal("Param/Value/7E9E0A96"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "T8", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tychus_Init () {
    gt_Tychus = TriggerCreate("gt_Tychus_Func");
    TriggerAddEventUnitDamaged(gt_Tychus, null, c_unitDamageTypeAny, c_unitDamageEither, "TychusCoopChaingunDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ages guard
//--------------------------------------------------------------------------------------------------
bool gt_Agesguard_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnit(), "ConcussiveShells", EventUnitDamageSourceUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Agesguard_Init () {
    gt_Agesguard = TriggerCreate("gt_Agesguard_Func");
    TriggerAddEventUnitDamaged(gt_Agesguard, null, c_unitDamageTypeAny, c_unitDamageEither, "PunisherGrenadesMengskU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: emporors shadow
//--------------------------------------------------------------------------------------------------
bool gt_empororsshadow_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 20))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = EventUnitDamageAmount();
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitDamage(EventUnitDamageSourceUnit(), "EshadowCopy", EventUnit(), lv_damage);
    TextTagCreate(StringExternal("Param/Value/945E3813"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "D5", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_empororsshadow_Init () {
    gt_empororsshadow = TriggerCreate("gt_empororsshadow_Func");
    TriggerAddEventUnitDamaged(gt_empororsshadow, null, c_unitDamageTypeAny, c_unitDamageEither, "C10CanisterRifleMengsk");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Earthsplitter
//--------------------------------------------------------------------------------------------------
bool gt_Earthsplitter_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsAtPoint2(1, "PoisonGasCloud", 0, UnitGetOwner(EventUnitDamageSourceUnit()), UnitGetPosition(EventUnit()));
    TextTagCreate(StringExternal("Param/Value/DA6B26BC"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "D6", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Earthsplitter_Init () {
    gt_Earthsplitter = TriggerCreate("gt_Earthsplitter_Func");
    TriggerAddEventUnitDamaged(gt_Earthsplitter, null, c_unitDamageTypeAny, c_unitDamageEither, "BacklashRocketsU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Odin
//--------------------------------------------------------------------------------------------------
bool gt_Odin_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitWeaponSetPeriodRemaining(EventUnitTarget(), 1, 0.0);
    UnitBehaviorAdd(EventUnitTarget(), "D8", EventUnitTarget(), 1);
    TextTagCreate(StringExternal("Param/Value/EEB71007"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Odin_Init () {
    gt_Odin = TriggerCreate("gt_Odin_Func");
    TriggerAddEventUnitAttacked2(gt_Odin, null, "Odin");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Nuke
//--------------------------------------------------------------------------------------------------
bool gt_Nuke_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    unitgroup autoA952D22C_g;
    int autoA952D22C_u;
    unit autoA952D22C_var;
    const int auto45451BAB_n = 5;
    int auto45451BAB_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = 3500.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "D7", EventUnitDamageSourceUnit(), 1);
    autoA952D22C_g = UnitGroupSearch(null, 13, UnitGetPosition(EventUnit()), 6.0, UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoA952D22C_u = UnitGroupCount(autoA952D22C_g, c_unitCountAll);
    for (;; autoA952D22C_u -= 1) {
        autoA952D22C_var = UnitGroupUnitFromEnd(autoA952D22C_g, autoA952D22C_u);
        if (autoA952D22C_var == null) { break; }
        UnitDamage(EventUnitDamageSourceUnit(), "nuke", autoA952D22C_var, lv_damage);
    }
    for (auto45451BAB_i = 1; auto45451BAB_i <= auto45451BAB_n; auto45451BAB_i += 1) {
        libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnit()), 1.4, RegionRandomPoint(RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))))));
    }
    TextTagCreate(StringExternal("Param/Value/6E630EAF"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Nuke_Init () {
    gt_Nuke = TriggerCreate("gt_Nuke_Func");
    TriggerAddEventUnitDamaged(gt_Nuke, null, c_unitDamageTypeAny, c_unitDamageEither, "HHLaserBatteryU");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Photon cannon
//--------------------------------------------------------------------------------------------------
bool gt_Photoncannon_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 15))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitHasBehavior2(EventUnitTarget(), "OptimizedOrdnance") == true)) {
    }
    else {
        UnitBehaviorAdd(EventUnitTarget(), "Ta3", EventUnitTarget(), 1);
        UnitBehaviorAdd(EventUnitTarget(), "OptimizedOrdnance", EventUnitTarget(), 1);
        UnitWeaponSetPeriodRemaining(EventUnitTarget(), 1, 0.0);
        TextTagCreate(StringExternal("Param/Value/0E6379E1"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
        TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
        Wait(gv_globalTexttagtimer, c_timeGame);
        TextTagDestroy(TextTagLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Photoncannon_Init () {
    gt_Photoncannon = TriggerCreate("gt_Photoncannon_Func");
    TriggerAddEventUnitAttacked2(gt_Photoncannon, null, "PhotonCannon");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Wrathwalker
//--------------------------------------------------------------------------------------------------
bool gt_Wrathwalker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;
    fixed lv_ability;

    // Automatic Variable Declarations
    unitgroup autoDA61663D_g;
    int autoDA61663D_u;
    unit autoDA61663D_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_damage = EventUnitDamageAmount();
    lv_damage /= 10.0;
    lv_ability = EventUnitDamageAmount();
    lv_ability /= 100.0;
    lv_ability *= gv_realLevelingStats[UnitGetOwner(EventUnitDamageSourceUnit())][11];
    lv_damage += lv_ability;
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Ta5", EventUnitDamageSourceUnit(), 1);
    autoDA61663D_g = UnitGroupSearch(null, 13, UnitGetPosition(EventUnit()), 3.0, UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoDA61663D_u = UnitGroupCount(autoDA61663D_g, c_unitCountAll);
    for (;; autoDA61663D_u -= 1) {
        autoDA61663D_var = UnitGroupUnitFromEnd(autoDA61663D_g, autoDA61663D_u);
        if (autoDA61663D_var == null) { break; }
        UnitDamage(EventUnitDamageSourceUnit(), "Wrath", autoDA61663D_var, lv_damage);
    }
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Small, libNtve_ge_ExplosionType_Protoss, UnitGetPosition(EventUnit()));
    TextTagCreate(StringExternal("Param/Value/F10E72A3"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Wrathwalker_Init () {
    gt_Wrathwalker = TriggerCreate("gt_Wrathwalker_Func");
    TriggerAddEventUnitDamaged(gt_Wrathwalker, null, c_unitDamageTypeAny, c_unitDamageEither, "ColossusTaldarimDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Alarak
//--------------------------------------------------------------------------------------------------
bool gt_Alarak_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 8))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "KerriganEpilogue03"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep60"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep50"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep40"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep30"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep20"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Creep10"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "lCreep41"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Clreep42"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "pCreep43"))) {
            return false;
        }

        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLifePercent, c_unitPropCurrent) < 30.0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Ta7", EventUnitDamageSourceUnit(), 1);
    UnitDamage(EventUnitDamageSourceUnit(), "Wrath", EventUnit(), 52428.0);
    TextTagCreate(StringExternal("Param/Value/02A93E27"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Alarak_Init () {
    gt_Alarak = TriggerCreate("gt_Alarak_Func");
    TriggerAddEventUnitDamaged(gt_Alarak, null, c_unitDamageTypeAny, c_unitDamageEither, "AlarakBaneBladesDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Blood Hunter
//--------------------------------------------------------------------------------------------------
bool gt_BloodHunter_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    unitgroup autoA3EC9AA8_g;
    int autoA3EC9AA8_u;
    unit autoA3EC9AA8_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoA3EC9AA8_g = UnitGroup(null, 13, RegionFromName(("Player Region " + IntToString(UnitGetOwner(EventUnitDamageSourceUnit())))), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoA3EC9AA8_u = UnitGroupCount(autoA3EC9AA8_g, c_unitCountAll);
    for (;; autoA3EC9AA8_u -= 1) {
        autoA3EC9AA8_var = UnitGroupUnitFromEnd(autoA3EC9AA8_g, autoA3EC9AA8_u);
        if (autoA3EC9AA8_var == null) { break; }
        UnitBehaviorAdd(autoA3EC9AA8_var, "StatisWard", EventUnitDamageSourceUnit(), 1);
    }
    TextTagCreate(StringExternal("Param/Value/AE40FE69"), 24, UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, true, false, PlayerGroupAll());
    UnitBehaviorAdd(EventUnitDamageSourceUnit(), "Ta6", EventUnitDamageSourceUnit(), 1);
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BloodHunter_Init () {
    gt_BloodHunter = TriggerCreate("gt_BloodHunter_Func");
    TriggerAddEventUnitDamaged(gt_BloodHunter, null, c_unitDamageTypeAny, c_unitDamageEither, "WarpBlades");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mothership
//--------------------------------------------------------------------------------------------------
bool gt_Mothership_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_damage;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((RandomInt(0, 100) <= 20))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnitTarget(), OrderTargetingPoint(AbilityCommand("SOAMothershipLineAttack", 0), UnitGetPosition(EventUnit())), c_orderQueueReplace);
    TextTagCreate(StringExternal("Param/Value/F8C0B81F"), 24, UnitGetPosition(EventUnitTarget()), 1.0, true, false, PlayerGroupAll());
    TextTagSetGravity(TextTagLastCreated(), gv_globalTexttagFlyYspeed);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, gv_globalTexttagtimer);
    UnitBehaviorAdd(EventUnitTarget(), "Ta8", EventUnitTarget(), 1);
    Wait(gv_globalTexttagtimer, c_timeGame);
    TextTagDestroy(TextTagLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Mothership_Init () {
    gt_Mothership = TriggerCreate("gt_Mothership_Func");
    TriggerAddEventUnitAttacked2(gt_Mothership, null, "SOAMothershipv4Weapon");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_onGameStart_Init();
    gt_onPlayerLeave_Init();
    gt_onStartupBankInit_Init();
    gt_onLevelUp_Init();
    gt_onPlayerLevelUp_Init();
    gt_onPlayerLevelUpDisplay_Init();
    gt_updateLeaderboards_Init();
    gt_onSendBossWave_Init();
    gt_onSendWave_Init();
    gt_onCreepReachesEnd_Init();
    gt_onUnitBecomesIdle_Init();
    gt_onCreationMechaBroodling_Init();
    gt_onSpecialBossSent_Init();
    gt_onWaveEnds_Init();
    gt_timerUnitStuk_Init();
    gt_onBuyRandomItem_Init();
    gt_onSell_Init();
    gt_onMerge_Init();
    gt_onBuild_Init();
    gt_onGasBossReady_Init();
    gt_onGasBossSent_Init();
    gt_onMissionCompleted_Init();
    gt_Buttons_Init();
    gt_Discordbutton_Init();
    gt_ItemAuras_Init();
    gt_ItemAurasoff_Init();
    gt_ItemEffects_Init();
    gt_Every1sec_Init();
    gt_Checkauras_Init();
    gt_Scantipede_Init();
    gt_Urubu_Init();
    gt_Ursadon_Init();
    gt_Tastelope_Init();
    gt_MechaHydralisk_Init();
    gt_Evochamper_Init();
    gt_MechaUltralisk_Init();
    gt_Gary_Init();
    gt_HighTemplar_Init();
    gt_Vorazun_Init();
    gt_Warpgate_Init();
    gt_VoidSeeker_Init();
    gt_Ultralisk_Init();
    gt_Carbotzergling_Init();
    gt_Kerrigan_Init();
    gt_Zagara_Init();
    gt_Siegetank_Init();
    gt_Nova_Init();
    gt_Duskwing_Init();
    gt_Tychus_Init();
    gt_Agesguard_Init();
    gt_empororsshadow_Init();
    gt_Earthsplitter_Init();
    gt_Odin_Init();
    gt_Nuke_Init();
    gt_Photoncannon_Init();
    gt_Wrathwalker_Init();
    gt_Alarak_Init();
    gt_BloodHunter_Init();
    gt_Mothership_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
